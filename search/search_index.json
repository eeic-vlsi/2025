{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>\u306f\u3058\u3081\u306b</p> <p>\u672cWeb\u30da\u30fc\u30b8\u306f\u30012025\u5e74\u5ea6\u6771\u4eac\u5927\u5b66\u5de5\u5b66\u90e8\u8b1b\u7fa9\u300cVLSI\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u300d\u306e\u6c4e\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u56de\u8b1b\u7fa9\u306e\u305f\u3081\u306e\u30da\u30fc\u30b8\u306b\u306a\u308a\u307e\u3059\u3002\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u984c\u6750\u3068\u3057\u3066\u3001CMOS VLSI\u8a2d\u8a08\u306b\u3064\u3044\u3066\u5b66\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"#_1","title":"\u8b1b\u7fa9\u306e\u306d\u3089\u3044\u306b\u3064\u3044\u3066","text":"<p>\u8b1b\u7fa9\u3092\u901a\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5185\u5bb9\u3092\u7406\u89e3\u3057\u3001\u5b9f\u8df5\u3059\u308b\u3053\u3068\u3092\u76ee\u6a19\u3068\u3057\u307e\u3059\u3002</p> <ul> <li>CMOS VLSI\u8a2d\u8a08\u30d5\u30ed\u30fc\u306e\u57fa\u672c<ul> <li>SystemVerilog\u3092\u7528\u3044\u305fRTL\u8a2d\u8a08</li> <li>\u8ad6\u7406\u5408\u6210</li> <li>\u914d\u7f6e\u914d\u7dda</li> </ul> </li> <li>\u57fa\u672c\u7684\u306a\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306eRTL\u8a2d\u8a08<ul> <li>RISC-V ISA</li> <li>\u57fa\u672c\u30de\u30a4\u30af\u30ed\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306eRTL\u5b9f\u88c5</li> <li>\u9ad8\u6027\u80fd\u5316\u624b\u6cd5\u306e\u9069\u7528\u3068\u305d\u306eRTL\u5b9f\u88c5</li> </ul> </li> </ul> <p>\u8b1b\u7fa9\u3067\u306f\u3053\u3046\u3057\u305f\u5185\u5bb9\u306b\u3064\u3044\u3066\u8aac\u660e\u3092\u3057\u306a\u304c\u3089\u3001\u6240\u3005\u3067\u5b9f\u969b\u306b\u624b\u3092\u52d5\u304b\u3057\u3066\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u8a2d\u8a08\u30d5\u30ed\u30fc\u3092\u9032\u3081\u3066\u8cb0\u3044\u307e\u3059\u3002\u8b1b\u7fa9\u4e2d\u306f\u9580\u672c\u3084TA\u304c\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002</p> <p>\u6bce\u56de\u3001\u30ce\u30fc\u30c8PC\u306e\u7528\u610f\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u3053\u306e\u8b1b\u7fa9\u30da\u30fc\u30b8\u306e\u95b2\u89a7\u3084VLSI\u8a2d\u8a08\u306e\u5b9f\u8df5\u306bPC\u3092\u5229\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"#_2","title":"\u65e5\u6642\u30fb\u5834\u6240","text":"<ul> <li>\u65e5\u6642: S1, \u6c34\u66dc1\u9650 (8:30\uff5e10:15)</li> <li>\u5834\u6240: 243</li> </ul>"},{"location":"#_3","title":"\u6210\u7e3e\u8a55\u4fa1","text":"<ul> <li>\u6c60\u7530\u5148\u751f\u3054\u62c5\u5f53\u306e\u5c02\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u56de\u3068\u5408\u7b97\u3067\u306e\u6210\u7e3e\u8a55\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002</li> <li>\u6388\u696d\u5185\u3067\u767a\u8868\u3059\u308b\u30ec\u30dd\u30fc\u30c8\u8ab2\u984c\u306b\u3066\u8a55\u4fa1\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"#_4","title":"\u9023\u7d61\u5148","text":"<p>\u6771\u4eac\u5927\u5b66 \u5de5\u5b66\u90e8 \u96fb\u5b50\u60c5\u5831\u5de5\u5b66\u79d1 \u9580\u672c \u6df3\u4e00\u90ce</p>"},{"location":"riscv_assembler/","title":"RISC-V \u30a2\u30bb\u30f3\u30d6\u30e9","text":"\u547d\u4ee4\u3092\u8ffd\u52a0 \u6a5f\u68b0\u8a9e\u751f\u6210 \u51fa\u529b \u30d0\u30a4\u30ca\u30ea \u30d0\u30a4\u30ca\u30ea\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 16\u9032\u6570 16\u9032\u6570\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9"},{"location":"rv32i/","title":"RISC-V RV32I\u4ed5\u69d8\u30e1\u30e2","text":"RV32I\u547d\u4ee4\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002 <ul> <li>\u4ee5\u4e0b\u3067<code>rd</code>\u3084<code>rs1</code>\u3001<code>rs2</code>\u306f\u305d\u308c\u305e\u308c\u306b\u683c\u7d0d\u3055\u308c\u305f\u5024 (\u53c2\u8003\u30bd\u30fc\u30b9\u306b\u304a\u3051\u308b<code>rs1_value</code>\u306a\u3069) \u306e\u3053\u3068</li> </ul> \u547d\u4ee4 <code>opcode[6:0]</code> \u6f14\u7b97\u5185\u5bb9 \u5206\u5c90\u5148\u30a2\u30c9\u30ec\u30b9 ADDI 0010011 rd = rs1 + imm \u00d7 XORI 0010011 rd = rs1 ^ imm \u00d7 ORI 0010011 rd = rs1 | imm \u00d7 ANDI 0010011 rd = rs1 &amp; imm \u00d7 ADD 0110011 rd = rs1 + rs2 \u00d7 SUB 0110011 rd = rs1 - rs2 \u00d7 XOR 0110011 rd = rs1 ^ rs2 \u00d7 OR 0110011 rd = rs1 | rs2 \u00d7 AND 0110011 rd = rs1 &amp; rs2 \u00d7 SLTI 0010011 rd = (signed)rs1 &lt; imm \u00d7 SLTIU 0010011 rd = rs1 &lt; imm (unsigned) \u00d7 SLT 0110011 rd = (signed)rs1 &lt; (signed)rs2 \u00d7 SLTU 0110011 rd = rs1 &lt; rs2 (unsigned) \u00d7 SLLI 0010011 rd = rs1 &lt;&lt; imm[4:0] \u00d7 SRLI 0010011 rd = rs1 &gt;&gt; imm[4:0] \u00d7 SRAI 0010011 rd = (signed)rs1 &gt;&gt;&gt; imm[4:0] \u00d7 SLL 0110011 rd = rs1 &lt;&lt; rs2[4:0] \u00d7 SRL 0110011 rd = rs1 &gt;&gt; rs2[4:0] \u00d7 SRA 0110011 rd = (signed)rs1 &gt;&gt;&gt; rs2[4:0] \u00d7 LUI 0110111 rd = imm \u00d7 AUIPC 0010111 rd = pc + imm \u00d7 LB 0000011 rd = Mem[rs1 + imm] (byte) \u00d7 LH 0000011 rd = Mem[rs1 + imm] (half) \u00d7 LW 0000011 rd = Mem[rs1 + imm] (word) \u00d7 LBU 0000011 rd = Mem[rs1 + imm] (byte, unsigned) \u00d7 LHU 0000011 rd = Mem[rs1 + imm] (half, unsigned) \u00d7 SB 0100011 Mem[rs1 + imm] = rs2 (byte) \u00d7 SH 0100011 Mem[rs1 + imm] = rs2 (half) \u00d7 SW 0100011 Mem[rs1 + imm] = rs2 (word) \u00d7 BEQ 1100011 if (rs1 == rs2) branch pc + imm BNE 1100011 if (rs1 != rs2) branch pc + imm BLT 1100011 if (rs1 &lt; rs2) (signed) branch pc + imm BGE 1100011 if (rs1 &gt;= rs2) (signed) branch pc + imm BLTU 1100011 if (rs1 &lt; rs2) (unsigned) branch pc + imm BGEU 1100011 if (rs1 &gt;= rs2) (unsigned) branch pc + imm JAL 1101111 rd = pc + 4; jump pc + imm JALR 1100111 rd = pc + 4; jump (rs1 + imm) &amp; ~1"},{"location":"week1/","title":"\u7b2c1\u56de \u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3","text":"<p>\u672c\u65e5\u306e\u8b1b\u7fa9\u5185\u5bb9</p> <ul> <li>VLSI\u306e\u6982\u8981\u3068\u6210\u308a\u7acb\u3061</li> <li>\u73fe\u4ee3\u7684\u306aCMOS VLSI\u8a2d\u8a08\u30d5\u30ed\u30fc</li> <li>\u30d7\u30ed\u30bb\u30c3\u30b5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3</li> </ul>"},{"location":"week1/#vlsi","title":"VLSI","text":"<p>\u305d\u3082\u305d\u3082VLSI\u3068\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\u3002\u521d\u56de\u306e\u6388\u696d\u3067\u306fVLSI\u3092\u305d\u306e\u57fa\u672c\u3084\u3042\u3089\u307e\u3057\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u7686\u3055\u3093\u306e\u591a\u304f\u306f\u8ad6\u7406\u56de\u8def\u3084\u3001\u30c7\u30a3\u30b8\u30bf\u30ebCMOS\u96c6\u7a4d\u56de\u8def\u3001MOS\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u306e\u52d5\u4f5c\u306b\u3064\u3044\u3066\u5b66\u3093\u3067\u304d\u305f\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3046\u3057\u305f\u7d4c\u9a13\u3092\u901a\u3058\u3066\u3001VLSI\u304cVery Large Scale Integration\u306e\u7565\u3067\u3001\u5927\u898f\u6a21\u306b\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u304c\u96c6\u7a4d\u3055\u308c\u305f\u56de\u8def\u3060\u3068\u3044\u3046\u3053\u3068\u306f\u3054\u5b58\u3058\u306e\u3053\u3068\u3068\u601d\u3044\u307e\u3059\u3002\u3055\u3066\u3001\u3068\u3053\u308d\u3067\u3001\u3069\u306e\u304f\u3089\u3044\u5927\u898f\u6a21\u306b\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u304c\u96c6\u7a4d\u3055\u308c\u3066\u3044\u308b\u3068\u3001Very Large Scale\u3001\u306a\u56de\u8def\u3068\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f</p> <p>Question: Very Large Scale\u3068\u306f\u3001\u3069\u306e\u304f\u3089\u3044\u3067\u3057\u3087\u3046\u304b?</p> \u3053\u305f\u3048 <p>\u666e\u904d\u7684\u306a\u5b9a\u7fa9\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u3068\u3048\u3070\u3001SSI (10\u8ad6\u7406\u30b2\u30fc\u30c8\u7a0b\u5ea6\u307e\u3067), MSI (1000\u8ad6\u7406\u30b2\u30fc\u30c8\u7a0b\u5ea6\u307e\u3067), LSI (1\u4e07\u8ad6\u7406\u30b2\u30fc\u30c8\u7a0b\u5ea6\u307e\u3067), VLSI (10\u4e07\u8ad6\u7406\u30b2\u30fc\u30c8\u7a0b\u5ea6\u307e\u3067), ULSI (\u305d\u308c\u4ee5\u4e0a)\u3068\u3044\u3063\u305f\u8a00\u8449\u3084\u5b9a\u7fa9\u3082\u3042\u308a\u307e\u3059\u304c\u3001 \u5b9f\u969b\u306e\u3068\u3053\u308d\u3001\u3042\u308b\u7a0b\u5ea6\u5927\u898f\u6a21\u306a\u30c7\u30a3\u30b8\u30bf\u30ebCMOS\u96c6\u7a4d\u56de\u8def\u3067\u3042\u308c\u3070\u307e\u305aVLSI\u3001\u5c0f\u898f\u6a21\u3067\u30a2\u30ca\u30ed\u30b0\u56de\u8def\u8981\u7d20\u304c\u591a\u304f\u3066\u3082\u307e\u3042VLSI\u3068\u547c\u3076\u3001\u304f\u3089\u3044\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u8a00\u8449\u306e\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\u4f8b\u3068\u3057\u3066\u3001\u30a2\u30ab\u30c7\u30df\u30c3\u30af\u306a\u4e16\u754c\u306b\u306f\u3001Symposium on VLSI Technology and Circuits\u3068\u3044\u3063\u305f\u540d\u79f0\u306e\u4f1a\u8b70\u3084\u3001IEEE Transactions on Very Large Scale Integration (VLSI) Systems\u3068\u3044\u3063\u305f\u540d\u79f0\u306e\u8ad6\u6587\u8a8c\u304c\u5b58\u5728\u3057\u307e\u3059\u304c\u3001\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u306e\u96c6\u7a4d\u5ea6\u304c\u6570\u4e07\u500b\u306b\u6e80\u305f\u306a\u3044\u56de\u8def\u304c\u3053\u308c\u3089\u306e\u30d5\u30a9\u30fc\u30ab\u30b9\u5916\u304b\u3068\u3044\u3046\u3068\u3001\u305d\u3093\u306a\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u305f\u3068\u3048\u3070\u3001\u3053\u308c\u306fVLSI\u306e\u4f8b\u3067\u3059\u3002\u3061\u3087\u3046\u306910\u4e07\u8ad6\u7406\u30b2\u30fc\u30c8\u7a0b\u5ea6\u30921\u30c1\u30c3\u30d7\u4e0a\u306b\u642d\u8f09\u3057\u305fCMOS\u96c6\u7a4d\u56de\u8def\u30c1\u30c3\u30d7\u306e\u5199\u771f\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30010.18\u03bcm CMOS\u88fd\u9020\u30d7\u30ed\u30bb\u30b9\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30011980\u5e74\u4ee3\u521d\u3081\u9803\u306e\u5546\u7528\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u540c\u7b49\u306e\u30aa\u30fc\u30c0\u306e\u96c6\u7a4d\u5ea6\u306b\u306a\u308a\u307e\u3059\u3002</p> 0.18\u03bcm CMOS\u88fd\u9020\u30d7\u30ed\u30bb\u30b9\u3067\u88fd\u9020\u3055\u308c\u305fVLSI\u300210\u4e07\u8ad6\u7406\u30b2\u30fc\u30c8\u7a0b\u5ea6\u306e\u898f\u6a21\u3002\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u7121\u7dda\u901a\u4fe1\u56de\u8def\u3092\u642d\u8f09\u3057\u3066\u3044\u307e\u3059\u3002 <p>Open Question: \u3053\u306e\u30c1\u30c3\u30d7\u306fVLSI\u3068\u3057\u3066\u306f\u7570\u5e38\u306a\u898b\u305f\u76ee\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u4e00\u4f53\u3069\u3053\u304c\u666e\u901a\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b?</p> <p>\u3055\u3066\u3001VLSI\u306f\u98db\u8e8d\u7684\u306a\u5fae\u7d30\u5316\u30fb\u9ad8\u96c6\u7a4d\u5316\u306e\u9053\u306e\u308a\u3092\u8fbf\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u6709\u540d\u306a\u30e0\u30fc\u30a2\u306e\u6cd5\u5247\u3084\u3001Dennard\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306e\u3053\u3068\u3092\u5b66\u3093\u3067\u304d\u305f\u3053\u3068\u3068\u601d\u3044\u307e\u3059\u3002\u4ed6\u306e\u591a\u304f\u306e\u30c7\u30d0\u30a4\u30b9\u3001\u3042\u308b\u3044\u306f\u3001\u4ed6\u306e\u591a\u304f\u306e\u5de5\u5b66\u5206\u91ce\u306b\u304a\u3044\u3066\u306f\u3001\u5fae\u7d30\u5316\u306b\u306f\u4f55\u3089\u304b\u306e\u30c9\u30ed\u30fc\u30d0\u30c3\u30af\u304c\u4f34\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001CMOS\u96c6\u7a4d\u56de\u8def\u306f\u3001\u5fae\u7d30\u5316\u304c\u3080\u3057\u308d\u6027\u80fd\u5411\u4e0a\u3068\u30b3\u30b9\u30c8\u4f4e\u6e1b\u306e\u4e21\u7acb\u3092\u3082\u305f\u3089\u3059\u3068\u3044\u3046\u3001\u6975\u3081\u3066\u7279\u7570\u306a\u6027\u8cea\u3092\u793a\u3057\u307e\u3059\u3002\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u306e\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30a4\u30c3\u30c1\u30f3\u30b0\u901f\u5ea6\u304c\u5411\u4e0a\u3057\u3001\u540c\u6642\u306b\u6d88\u8cbb\u96fb\u529b\u3084\u88fd\u9020\u30b3\u30b9\u30c8\u304c\u4f4e\u4e0b\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u540c\u4e00\u30c1\u30c3\u30d7\u9762\u7a4d\u5185\u306b\u3088\u308a\u591a\u304f\u306e\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u3092\u96c6\u7a4d\u3067\u304d\u308b\u305f\u3081\u3001\u56de\u8def\u306e\u9ad8\u6a5f\u80fd\u5316\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002</p> <p>Question: \u73fe\u5728\u6700\u3082\u96c6\u7a4d\u5ea6\u306e\u9ad8\u3044VLSI\u306b\u306f\u3001\u3069\u306e\u304f\u3089\u3044\u306e\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u304c\u96c6\u7a4d\u3055\u308c\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b?</p> \u3053\u305f\u3048? <p>\u7d044\u5146\u500b (Cerebras Wafer Scale Engine-3, 5nm FinFET\u88fd\u9020\u30d7\u30ed\u30bb\u30b9) (\u305f\u3076\u3093)\u3002Wafer Scale Engine\u306e\u3088\u3046\u306a\u5b9f\u88c5\u624b\u6cd5\u30921\u30c1\u30c3\u30d7\u3068\u898b\u505a\u3059\u3068\u3059\u308b\u3068\u3001\u3053\u308c\u304c\u4e00\u756a\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u3046\u3057\u305f\u5546\u7528\u30c1\u30c3\u30d7\u5185\u90e8\u306e\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u6570\u3092\u5b9f\u969b\u306b\u6570\u3048\u308b\u3053\u3068\u306f\u56f0\u96e3\u306a\u306e\u3067\u8a73\u7d30\u306a\u6570\u5024\u306b\u306f\u81ea\u4fe1\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u6c4e\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u3057\u3066\u306fApple M3 Ultra\u3001\u5c02\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u30d7\u30ed\u30bb\u30c3\u30b5 (GPU) \u3068\u3057\u3066\u306fNvidia GB100\u304c\u3069\u3061\u3089\u3082\u6570\u5343\u5104\u500b\u306e\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u3092\u96c6\u7a4d\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u306a\u304a\u30011\u30d1\u30c3\u30b1\u30fc\u30b8\u5185\u306e\u96c6\u7a4d\u5ea6\u3067\u8003\u3048\u308b\u30683\u6b21\u5143\u7a4d\u5c64\u3055\u308c\u305fV-NAND\u306a\u3069\u3082\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u6570\u3068\u3057\u3066\u306f\u4e0a\u4f4d\u306b\u5165\u3063\u3066\u304f\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u3053\u306e\u3088\u3046\u306a\u6027\u8cea\u306b\u3088\u308a\u3001CMOS\u6280\u8853\u306f\u904e\u53bb\u6570\u5341\u5e74\u306b\u308f\u305f\u3063\u3066\u9a5a\u7570\u7684\u306a\u9032\u5316\u3092\u9042\u3052\u3001\u60c5\u5831\u793e\u4f1a\u306e\u4e2d\u6838\u3092\u62c5\u3046\u6280\u8853\u3068\u3057\u3066\u767a\u5c55\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u6975\u5ea6\u306e\u5fae\u7d30\u5316\u304c\u9032\u3080\u4e2d\u3067\u3001\u3053\u3046\u3057\u305f\u6d41\u308c\u304c\u5f90\u3005\u306b\u9650\u754c\u3092\u8fce\u3048\u3064\u3064\u3042\u308b\u306e\u3082\u4e8b\u5b9f\u3067\u3059\u3002\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u306e\u30b5\u30a4\u30ba\u304c\u539f\u5b50\u30b9\u30b1\u30fc\u30eb\u306b\u8fd1\u3065\u304f\u306b\u3064\u308c\u3001\u30ea\u30fc\u30af\u96fb\u6d41\u3084\u71b1\u306e\u554f\u984c\u304c\u9855\u8457\u306b\u306a\u308a\u3001\u5358\u7d14\u306a\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u308b\u6027\u80fd\u5411\u4e0a\u306f\u6b21\u7b2c\u306b\u56f0\u96e3\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002</p> <p>\u3053\u3046\u3057\u305f\u80cc\u666f\u306e\u3082\u3068\u3001\u8fd1\u5e74\u3067\u306fFinFET\u3084GAAFET\u3001\u3055\u3089\u306b\u306fCFET\u306a\u3069\u3001\u65b0\u3057\u3044\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u69cb\u9020\u306e\u30c7\u30d0\u30a4\u30b9\u304c\u767b\u5834\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u6280\u8853\u306f\u30c7\u30d0\u30a4\u30b9\u306e\u7814\u7a76\u3060\u3051\u3067\u306a\u304f\u3001\u96c6\u7a4d\u56de\u8def\u306e\u7814\u7a76\u958b\u767a\u306b\u643a\u308f\u308b\u4e0a\u3067\u3082\u7406\u89e3\u3057\u3066\u304a\u304f\u3079\u304d\u91cd\u8981\u306a\u77e5\u8b58\u3067\u3059\u3002\u672c\u8b1b\u7fa9\u306e\u5f8c\u534a\u3067\u306f\u3001FinFET\u306e\u6d3b\u7528\u3092\u60f3\u5b9a\u3057\u305fVLSI\u306e\u8a2d\u8a08\u3092\u5b9f\u65bd\u3057\u3066\u8cb0\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002</p> FinFET\u306e\u30a4\u30e1\u30fc\u30b8\u56f3\u3002\u4eca\u5f8c\u306e\u6f14\u7fd2\u3067\u306f\u3053\u3046\u3057\u305fFinFET\u88fd\u9020\u30d7\u30ed\u30bb\u30b9\u3092\u60f3\u5b9a\u3057\u305f\u8a2d\u8a08\u3092\u5b9f\u65bd\u3057\u3066\u3044\u304d\u307e\u3059\u3002 <p>\u672c\u8b1b\u7fa9\u3067\u5b66\u3093\u3067\u3044\u304f\u73fe\u5728\u306eVLSI\u8a2d\u8a08\u6280\u8853\u306f\u3001\u968e\u5c64\u5316\u3084\u62bd\u8c61\u5316\u306e\u5de5\u592b\u306b\u3088\u308a\u3001\u3053\u3046\u3057\u305f\u65b0\u305f\u306a\u30c7\u30d0\u30a4\u30b9\u6280\u8853\u306b\u5bfe\u3057\u3066\u3082\u67d4\u8edf\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u8a2d\u8a08\u57fa\u76e4\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u5c06\u6765\u7684\u306b\u672a\u77e5\u306e\u30c7\u30d0\u30a4\u30b9\u304c\u767b\u5834\u3057\u305f\u3068\u3057\u3066\u3082\u3001\u305d\u308c\u3089\u3092\u6d3b\u304b\u3057\u305f\u96c6\u7a4d\u56de\u8def\u306e\u8a2d\u8a08\u306b\u304a\u3044\u3066\u5341\u5206\u306b\u5f79\u7acb\u3064\u77e5\u898b\u3068\u306a\u308b\u306f\u305a\u3067\u3059\u3002</p>"},{"location":"week1/#cmos-vlsi","title":"CMOS VLSI","text":"<p>\u73fe\u4ee3\u306b\u304a\u3051\u308bVLSI\u306e\u591a\u304f\u306f\u3001CMOS\u96c6\u7a4d\u56de\u8def\u3068\u3057\u3066\u5b9f\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c7\u30a3\u30b8\u30bf\u30ebCMOS\u96c6\u7a4d\u56de\u8def\u306b\u3064\u3044\u3066\u601d\u3044\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u3053\u3067\u306f\u3001\u305f\u3068\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306aMOS\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u304b\u3089\u6210\u308b\u56de\u8def\u306e\u3053\u3068\u3092\u305d\u3046\u547c\u3076\u306e\u3067\u3057\u305f\u3002\u30c7\u30a3\u30b8\u30bf\u30ebCMOS\u96c6\u7a4d\u56de\u8def\u306b\u304a\u3044\u3066\u306f\u3001\u5404MOS\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u306f\u30b9\u30a4\u30c3\u30c1\u306e\u3088\u3046\u306b\u50cd\u304d\u307e\u3059\u3002</p> MOS\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u306e\u52d5\u4f5c\u3092\u5358\u7d14\u5316\u3059\u308b\u3068\u3001\u30b2\u30fc\u30c8\u96fb\u5727\u306b\u5fdc\u3058\u3066\u30b9\u30a4\u30c3\u30c1\u306e\u3088\u3046\u306b\u50cd\u304f\u306e\u3067\u3057\u305f\u3002 <p>\u3053\u306e\u3088\u3046\u306b\u3001\u30b9\u30a4\u30c3\u30c1\u3068\u3057\u3066\u632f\u308b\u821e\u3046\u8907\u6570\u306eMOS\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u304c\u7d44\u307f\u5408\u308f\u3055\u3063\u3066\u8ad6\u7406\u30b2\u30fc\u30c8\u3068\u3057\u3066\u306e\u52d5\u4f5c\u3092\u5b9f\u73fe\u3057\u3001\u305d\u3046\u3057\u305f\u8ad6\u7406\u30b2\u30fc\u30c8\u304c\u3055\u3089\u306b\u7d44\u307f\u5408\u308f\u3055\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u8907\u96d1\u306a\u8ad6\u7406\u56de\u8def\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3057\u305f\u3002</p> MOS\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u304c\u76f8\u88dc\u7684 (complementary) \u306a\u69cb\u6210\u3092\u3068\u308b\u3053\u3068\u3067\u3001\u69d8\u3005\u306b\u5229\u70b9\u306e\u3042\u308bCMOS\u8ad6\u7406\u56de\u8def\u3092\u5b9f\u73fe\u53ef\u80fd\u306a\u306e\u3067\u3057\u305f\u3002 <p>\u3053\u3046\u3057\u305f\u8ad6\u7406\u30b2\u30fc\u30c8\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3092\u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\u306b\u7d9a\u3051\u3066\u3044\u3051\u3070\u3001\u5148\u307b\u3069\u898b\u3066\u304d\u305f\u3088\u3046\u306aVLSI\u3092\u8a2d\u8a08\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u304b? \u3082\u3057\u304b\u3059\u308b\u3068\u30011000\u30b2\u30fc\u30c8\u7a0b\u5ea6\u307e\u3067\u306a\u3089\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u30011\u4e07\u30b2\u30fc\u30c8\u3068\u306a\u308b\u3068\u3069\u3046\u3067\u3057\u3087\u3046? \u307e\u3057\u3066\u3084\u30011000\u5104\u30b2\u30fc\u30c8\u3067\u306f?</p> <p>VLSI\u306e\u8a2d\u8a08\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u8907\u96d1\u6027\u3068\u306e\u95d8\u3044\u3067\u3059\u3002\u9ad8\u96c6\u7a4d\u5316\u306b\u3068\u3082\u306a\u3063\u3066\u8907\u96d1\u5ea6\u3092\u5897\u3057\u3066\u3044\u304fVLSI\u306e\u8a2d\u8a08\u3092\u9032\u3081\u3066\u3044\u304f\u305f\u3081\u306b\u3001\u8a2d\u8a08\u8005\u306f\u69d8\u3005\u306a\u5de5\u592b\u3092\u51dd\u3089\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u4ee5\u964d\u3067\u306f\u3001\u3053\u308c\u307e\u3067\u306b\u69d8\u3005\u306a\u4eba\u9593\u306e\u624b\u3067\u6d17\u7df4\u3055\u308c\u3066\u304d\u305f\u73fe\u4ee3\u7684\u306aCMOS VLSI\u8a2d\u8a08\u30d5\u30ed\u30fc\u306b\u3064\u3044\u3066\u6982\u8aac\u3057\u307e\u3059\u3002</p> <p>Open Question: \u30a2\u30ca\u30ed\u30b0CMOS\u96c6\u7a4d\u56de\u8def\u306e\u8a2d\u8a08\u3084\u3001\u30c7\u30a3\u30b9\u30af\u30ea\u30fc\u30c8IC\u3092\u7528\u3044\u305f\u56de\u8def\u306e\u8a2d\u8a08\u3068\u6bd4\u8f03\u3057\u3066\u307f\u308b\u3068\u3069\u3046\u3067\u3057\u3087\u3046?</p> <p>Introduction to VLSI Systems</p> <p>\u521d\u671f\u306eVLSI\u8a2d\u8a08\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u305f\u3082\u306e\u3068\u3057\u3066\u3001Introduction to VLSI Systems\u3068\u3044\u3046\u66f8\u7c4d\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u5f53\u6642\u306eVLSI\u8a2d\u8a08\u30d5\u30ed\u30fc\u3084\u305d\u306e\u6559\u80b2\u306b\u95a2\u3059\u308b\u3082\u306e\u3068\u3057\u3066\u3001\u3053\u306e\u8a18\u4e8b\u306a\u3069\u306f\u975e\u5e38\u306b\u9762\u767d\u3044\u3067\u3059\u3002</p> <p>SoC/SiP/Chiplet</p> <p>\u3053\u3053\u3067\u304a\u8a71\u3057\u305f\u8907\u96d1\u6027\u3001\u306f\u5358\u4e00\u306e\u30c1\u30c3\u30d7 (\u30c0\u30a4\u3001\u3068\u3082\u547c\u3070\u308c\u307e\u3059) \u306e\u4e0a\u306e\u8a71\u3067\u3059\u3002\u8fd1\u5e74\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3044\u3066\u306f\u3001\u8907\u6570\u306e\u30c1\u30c3\u30d7\u3092\u7528\u3044\u3066\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u4f8b\u304c\u5897\u3048\u3066\u304d\u3066\u3044\u307e\u3059\u3002\u69d8\u3005\u306a\u6a5f\u80fd\u3092\u5358\u4e00\u306eVLSI\u30c1\u30c3\u30d7\u306b\u96c6\u7a4d\u3057\u5b9f\u88c5\u3057\u305f\u3082\u306e\u3092SoC (System on Chip/System on a Chip) \u3068\u547c\u3073\u307e\u3059\u3002\u4e00\u65b9\u3001\u8907\u6570\u306eVLSI\u30c1\u30c3\u30d7\u306b\u3088\u3063\u3066\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3057\u3001\u305d\u308c\u3092\u5358\u4e00\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u5185\u306b\u96c6\u7a4d\u3057\u305f\u3082\u306e\u3092SiP (System in Package/System in a Package) \u3068\u547c\u3073\u307e\u3059\u3002\u6700\u8fd1\u3067\u306f\u3001SiP\u306e\u3088\u3046\u306a\u5b9f\u88c5\u624b\u6cd5\u3084\u3001\u305d\u308c\u3092\u69cb\u6210\u3059\u308b\u5404\u30c1\u30c3\u30d7\u3092\u6307\u3057\u3066\u3001Chiplet\u3068\u3044\u3046\u8a00\u8449\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u3082\u591a\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u307e\u305fSoC\u304cSiP\u3084Chiplet\u306e\u5bfe\u7fa9\u8a9e\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u308b\u3053\u3068\u3082\u591a\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u672c\u8b1b\u7fa9\u3067\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u8907\u6570VLSI\u306b\u3088\u308b\u5b9f\u88c5\u3092\u60f3\u5b9a\u3057\u305f\u30de\u30a4\u30af\u30ed\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3084RTL\u8a2d\u8a08\u3001\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u6280\u8853\u306b\u306f\u7acb\u3061\u5165\u308a\u307e\u305b\u3093\u304c\u3001\u4eca\u5f8c\u307e\u3059\u307e\u3059\u91cd\u8981\u306b\u306a\u3063\u3066\u3044\u304f\u9818\u57df\u306b\u601d\u308f\u308c\u307e\u3059\u3002</p>"},{"location":"week1/#cmos-vlsi_1","title":"CMOS VLSI\u8a2d\u8a08\u30d5\u30ed\u30fc","text":"<p>\u3053\u306e\u3088\u3046\u306a\u8907\u96d1\u6027\u3092\u624b\u306a\u3065\u3051\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001\u968e\u5c64\u5316\u30fb\u62bd\u8c61\u5316\u304c\u3042\u308a\u307e\u3059\u3002\u8907\u96d1\u306a\u3082\u306e\u5c64\u5225\u306b\u5206\u3051\u3001\u4e0a\u4f4d\u306e\u30ec\u30d9\u30eb\u306b\u304a\u3044\u3066\u306f\u4e0b\u4f4d\u306e\u30ec\u30d9\u30eb\u306e\u8a73\u7d30\u3092\u96a0\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u8907\u96d1\u306a\u3082\u306e\u3092\u5358\u7d14\u306a\u30e2\u30c7\u30eb\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002CMOS VLSI\u306e\u8a2d\u8a08\u30d5\u30ed\u30fc\u306f\u3001\u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u56f3\u306b\u793a\u3059\u3088\u3046\u306a\u30c8\u30c3\u30d7\u30c0\u30a6\u30f3\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002</p> CMOS VLSI\u306e\u8a2d\u8a08\u30d5\u30ed\u30fc\u3002\u4eca\u5f8c\u306e\u6f14\u7fd2\u3067\u306f\u3053\u308c\u3092\u5b9f\u8df5\u3057\u3066\u3044\u304d\u307e\u3059\u3002 <p>\u3053\u3053\u3067\u306f\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u8a2d\u8a08\u3092\u984c\u6750\u306b\u7c21\u6613\u7684\u306b\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u30de\u30a4\u30af\u30ed\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u306f\u3001\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u547d\u4ee4\u30bb\u30c3\u30c8\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 (ISA) \u3092\u3069\u306e\u3088\u3046\u306b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3068\u3057\u3066\u5b9f\u88c5\u3059\u308b\u304b\u3092\u5b9a\u3081\u305f\u8a2d\u8a08\u306e\u3053\u3068\u3067\u3059\u3002ISA\u3092\u5b9f\u73fe\u3059\u308b\u56de\u8def\u69cb\u9020\u3084\u51e6\u7406\u306e\u6d41\u308c\u3092\u5404\u6a5f\u80fd\u30d6\u30ed\u30c3\u30af\u3084\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u69cb\u6210\u306e\u3088\u3046\u306a\u62bd\u8c61\u5ea6\u3067\u8868\u73fe\u3057\u305f\u3082\u306e\u3067\u3059\u3002RTL\u8a2d\u8a08\u306f\u3001\u305d\u3046\u3057\u305f\u30c7\u30fc\u30bf\u306e\u6d41\u308c\u3084\u56de\u8def\u69cb\u6210\u3092\u3088\u308a\u8a73\u7d30\u306b\u8868\u73fe\u3057\u305f\u3082\u306e\u3067\u3001HDL\u3092\u7528\u3044\u3066\u8a18\u8ff0\u3055\u308c\u307e\u3059\u3002\u3053\u306eRTL\u8a2d\u8a08\u3092\u8ad6\u7406\u5408\u6210\u306b\u3088\u3063\u3066\u8ad6\u7406\u30b2\u30fc\u30c8\u30ec\u30d9\u30eb\u306e\u56de\u8def\u3078\u3068\u5909\u63db\u3057\u307e\u3059\u3002\u3053\u308c\u3082\u73fe\u5728\u306e\u30d5\u30ed\u30fc\u3067\u306fHDL\u306b\u3088\u3063\u3066\u8a18\u8ff0\u3055\u308c\u307e\u3059\u304c\u3001\u305d\u306e\u5185\u90e8\u306f\u5927\u91cf\u306e\u8ad6\u7406\u30b2\u30fc\u30c8\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u305d\u308c\u3089\u304c\u76f4\u63a5\u63a5\u7d9a\u3055\u308c\u308b\u304b\u305f\u3061\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u8ad6\u7406\u30b2\u30fc\u30c8\u30ec\u30d9\u30eb\u8a2d\u8a08\u306f\u914d\u7f6e\u914d\u7dda\u306b\u3088\u3063\u3066\u30ec\u30a4\u30a2\u30a6\u30c8\u3078\u3068\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u30ec\u30a4\u30a2\u30a6\u30c8\u3068\u306f\u3001\u30b7\u30ea\u30b3\u30f3\u4e0a\u306b\u30c8\u30e9\u30f3\u30b8\u30b9\u30bf\u3084\u914d\u7dda\u3092\u7269\u7406\u7684\u306b\u3069\u3046\u914d\u7f6e\u30fb\u63a5\u7d9a\u3059\u308b\u304b\u30922\u6b21\u5143\u5e73\u9762\u4e0a\u306e\u56f3\u3068\u3057\u3066\u5b9a\u3081\u305f\u30c7\u30fc\u30bf\u3067\u3059\u3002</p> <p>\u3053\u3046\u3057\u305f\u968e\u5c64\u5316\u30fb\u62bd\u8c61\u5316\u306b\u306f\u5c11\u3005\u7570\u306a\u3063\u305f\u4ed6\u306e\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u308a\u5f97\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u4e0a\u306e\u4f8b\u3067\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u30de\u30a4\u30af\u30ed\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u3088\u3046\u306a\u62bd\u8c61\u6a5f\u68b0\u3092\u5143\u306b\u3057\u3066HDL\u3092\u4f7f\u3063\u3066RTL\u8a2d\u8a08\u3092\u3059\u308b\u5834\u5408\u3082\u3042\u308c\u3070\u3001\u307b\u304b\u306b\u3001\u3082\u3063\u3068\u30b7\u30f3\u30d7\u30eb\u306a\u6709\u9650\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\u3092\u5143\u306bHDL\u3092\u4f7f\u3063\u3066RTL\u8a2d\u8a08\u3092\u3059\u308b\u3001\u3042\u308b\u3044\u306f\u3001\u7279\u5b9a\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7591\u4f3c\u30b3\u30fc\u30c9\u3084\u9ad8\u7d1a\u8a00\u8a9e\u306a\u3069\u3067\u8868\u73fe\u3057\u3001\u305d\u308c\u3092\u5143\u306bHDL\u3092\u4f7f\u3063\u3066RTL\u8a2d\u8a08\u3092\u3059\u308b\u5834\u5408\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002\u5c02\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u8b1b\u7fa9\u3067\u306f\u3001\u7279\u306b\u5f8c\u8005\u306b\u3064\u3044\u3066\u6271\u3063\u3066\u3044\u304f\u3082\u306e\u3068\u601d\u3044\u307e\u3059\u3002</p> <p>\u3057\u304b\u3057\u3044\u305a\u308c\u306e\u5834\u5408\u306b\u3064\u3044\u3066\u3082\u3001RTL\u8a2d\u8a08\u3084\u3001\u8ad6\u7406\u5408\u6210\u30fb\u914d\u7f6e\u914d\u7dda\u3068\u3044\u3063\u305f\u30d5\u30ed\u30fc\u306e\u7406\u89e3\u304c\u91cd\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u8b1b\u7fa9\u306f\u3001\u307e\u3055\u306b\u305d\u3046\u3057\u305f\u30d5\u30ed\u30fc\u306b\u7fd2\u719f\u3057\u3066\u8cb0\u3046\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"week1/#rtl","title":"RTL\u8a2d\u8a08","text":"<p>RTL\u3068\u306f\u3001Register Transfer Level\u306e\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u3092\u3044\u3064\u3001\u3069\u3053\u304b\u3089\u3069\u3053\u3078\u8ee2\u9001\u3059\u308b\u304b\u3001\u3068\u3044\u3046\u51e6\u7406\u3092\u3001\u30af\u30ed\u30c3\u30af\u3092\u57fa\u6e96\u3068\u3057\u305f\u52d5\u4f5c\u3067\u8a18\u8ff0\u3059\u308b\u62bd\u8c61\u8868\u73fe\u3067\u3059\u3002\u4eba\u9593\u304c\u7406\u89e3\u30fb\u8a2d\u8a08\u3057\u3084\u3059\u304f\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3082\u5bb9\u6613\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u8868\u73fe\u3092\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u8a18\u8ff0\u8a00\u8a9e\u3092\u7528\u3044\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002</p> <p>\u672c\u8b1b\u7fa9\u3067\u306f\u7279\u306b\u3001Verilog HDL\u306e\u62e1\u5f35\u7248\u3067\u3042\u308bSystemVerilog\u3092\u63a1\u7528\u3057\u3066\u8a2d\u8a08\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\u8a2d\u8a08\u5411\u3051\u306e\u6c17\u306e\u5229\u3044\u305f\u6a5f\u80fd\u306e\u8ffd\u52a0\u3084\u3001\u691c\u8a3c\u306e\u305f\u3081\u306e\u591a\u69d8\u306a\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u3001\u8a73\u7d30\u306b\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u304c\u3001\u4eca\u56de\u306fVerilog HDL\u306e\u69cb\u6587\u3092\u601d\u3044\u51fa\u3057\u3066\u8cb0\u3046\u305f\u3081\u3001\u307e\u305f\u3001\u3061\u3087\u3063\u3068\u6c17\u306e\u5229\u3044\u305fVerilog HDL\u3068\u3057\u3066SystemVerilog\u3092\u4f7f\u3063\u3066\u3044\u304f\u305f\u3081\u306b\u3001Verilog HDL\u3068\u306e\u5206\u304b\u308a\u3084\u3059\u3044\u9055\u3044\u6570\u70b9\u3092\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u898b\u306a\u304c\u3089\u8aac\u660e\u3057\u307e\u3059\u3002</p> SystemVerilog\u3092\u4f7f\u3063\u305f\u30b7\u30f3\u30d7\u30eb\u306a\u9806\u5e8f\u56de\u8def\u306e\u4f8b<pre><code>module led_controller (\n    // SystemVerilog\u3067\u306f\u3001logic\u3068\u3044\u3046\u4fbf\u5229\u306a\u578b\u304c\u3042\u308a\u307e\u3059\n    input logic clk,  // \u30af\u30ed\u30c3\u30af\u4fe1\u53f7\n    input logic rst_n,  // \u975e\u540c\u671f\u30ea\u30bb\u30c3\u30c8\uff08\u8ca0\u8ad6\u7406\uff09\n    output logic led_out  // LED\u51fa\u529b\uff081\u3067\u70b9\u706f\uff09\n);\n\n    // \u4ee5\u4e0b\u306fMoore\u578b\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3067\u3059\n\n    // typedef\u3067\u578b\u306bstate_t\u3068\u547d\u540d (SystemVerilog\u7279\u6709\u3067\u3059)\n    // \u72b6\u614b\u3092\u5217\u6319\u578b (enum) \u3067\u5b9a\u7fa9\uff08SystemVerilog\u7279\u6709\u3067\u3059\uff09\n    typedef enum logic [1:0] {\n        IDLE,  // \u521d\u671f\u72b6\u614b\n        ON,  // LED\u70b9\u706f\n        OFF  // LED\u6d88\u706f\n    } state_t;\n\n    // \u73fe\u5728\u306e\u72b6\u614b\u3068\u6b21\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u5909\u6570\n    state_t current_state, next_state;\n\n    // SystemVerilog\u3067\u306f\u3001\u7d44\u307f\u5408\u308f\u305b\u56de\u8def\u7528\u306ealways\u6587\u3001always_comb\u304c\u3042\u308a\u307e\u3059\n\n    // \u51fa\u529b\u5236\u5fa1 (\u72b6\u614b\u306b\u5fdc\u3058\u3066LED\u51fa\u529b\u3092\u6c7a\u5b9a)\n    always_comb begin\n        // SystemVerilog\u3067\u306f\u3001\u8907\u6570\u30b1\u30fc\u30b9\u304c\u540c\u6642\u306b\u771f\u306b\u306a\u3089\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u306e\n        // \u30ad\u30fc\u30ef\u30fc\u30c9 unique \u304c\u3042\u308a\u307e\u3059\n        unique case (current_state)  \n            IDLE:    led_out = 1'b0;  // \u521d\u671f\u72b6\u614b\u3067\u306f\u6d88\u706f\n            ON:      led_out = 1'b1;  // ON\u72b6\u614b\u3067\u306f\u70b9\u706f\n            OFF:     led_out = 1'b0;  // OFF\u72b6\u614b\u3067\u306f\u6d88\u706f\n            default: led_out = 1'b0;  // \u4e00\u5fdc\u30c7\u30d5\u30a9\u30eb\u30c8\n        endcase\n    end\n\n    // \u72b6\u614b\u9077\u79fb\u6761\u4ef6 (\u6b21\u72b6\u614b\u306e\u6c7a\u5b9a)\n    always_comb begin\n        unique case (current_state)\n            IDLE:    next_state = ON;  // \u8d77\u52d5\u5f8c\u306fON\u3078\n            ON:      next_state = OFF;  // \u70b9\u706f\u5f8c\u306f\u6d88\u706f\n            OFF:     next_state = ON;  // \u6d88\u706f\u5f8c\u306f\u518d\u3073\u70b9\u706f\n            default: next_state = IDLE;  // \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u521d\u671f\u5316\n        endcase\n    end\n\n    // SystemVerilog\u3067\u306f\u3001\u9806\u5e8f\u56de\u8def\u7528\u306ealways\u6587\u3001always_ff\u3082\u3042\u308a\u307e\u3059\n\n    // \u72b6\u614b\u306e\u66f4\u65b0\n    always_ff @(posedge clk) begin\n        if (!rst_n)\n            current_state &lt;= IDLE;  // \u30ea\u30bb\u30c3\u30c8\u6642\u306f\u521d\u671f\u72b6\u614b\u3078\n        else\n            current_state &lt;= next_state;  // \u6b21\u72b6\u614b\u306b\u9077\u79fb\n    end\n\nendmodule\n</code></pre>"},{"location":"week1/#_1","title":"\u8ad6\u7406\u5408\u6210","text":"<p>\u8ad6\u7406\u5408\u6210 (Logic synthesis, synthesis) \u306f\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u8a18\u8ff0\u8a00\u8a9e\u3067\u8a18\u8ff0\u3055\u308c\u305fRTL\u8a2d\u8a08\u3092\u3001\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306e\u30bb\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3078\u3068\u5909\u63db\u3059\u308b\u5de5\u7a0b\u3067\u3059\u3002\u3053\u3053\u3067\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u306f\u3001\u898f\u683c\u5316\u3055\u308c\u305f\u7269\u7406\u7684\u30b5\u30a4\u30ba\u306e\u5404\u7a2e\u8ad6\u7406\u30b2\u30fc\u30c8\u30bb\u30eb\u306e\u30c7\u30fc\u30bf\u3092\u96c6\u3081\u305f\u3082\u306e\u3067\u3001\u7269\u7406\u7684\u306a\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u4ed6\u3001HDL\u306e\u5f62\u5f0f\u3067\u6574\u5099\u3055\u308c\u305fRTL\u8a2d\u8a08\u3084\u3001\u30c7\u30a3\u30b8\u30bf\u30eb\u56de\u8def\u3068\u3057\u3066\u306e\u9045\u5ef6\u3084\u7acb\u4e0a\u308a\u30fb\u7acb\u4e0b\u308a\u306a\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u60c5\u5831\u306e\u307e\u3068\u307e\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u3082\u542b\u307e\u308c\u307e\u3059\u3002</p> \u7c21\u6613\u7684\u306b\u8868\u73fe\u3057\u305f\u8ad6\u7406\u5408\u6210\u30d5\u30ed\u30fc\u3002 <p>\u8ad6\u7406\u5408\u6210\u306b\u304a\u3044\u3066\u306f\u3001\u307e\u305a\u3001RTL\u8a2d\u8a08\u3092\u30c6\u30af\u30ce\u30ed\u30b8\u975e\u4f9d\u5b58\u306a\u4e2d\u9593\u8868\u73fe\u3078\u3068\u5909\u63db\u3001\u6700\u9069\u5316\u3057\u3001\u305d\u306e\u5f8c\u3001\u7279\u5b9a\u306e\u88fd\u9020\u30d7\u30ed\u30bb\u30b9\u306e\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u306a\u308b\u3088\u3046\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u56de\u8def\u3068\u3057\u3066\u6240\u671b\u306e\u52d5\u4f5c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u6e80\u305f\u3059\u3079\u304d\u5236\u7d04\u3082\u4e00\u7dd2\u306b\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002FPGA\u3067\u306e\u8a2d\u8a08\u3092\u65e2\u306b\u7d4c\u9a13\u3057\u3066\u3044\u308b\u65b9\u306f\u3001\u5236\u7d04\u30d5\u30a1\u30a4\u30eb\u3068\u805e\u304f\u3068\u5177\u4f53\u7684\u306b\u30a4\u30e1\u30fc\u30b8\u304c\u6e67\u304f\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002</p> <p>\u8ad6\u7406\u5408\u6210\u306e\u4e00\u9023\u306e\u30d5\u30ed\u30fc\u306f\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u307e\u3059\u3002\u4ee3\u8868\u7684\u306a\u30c4\u30fc\u30eb\u3068\u3057\u3066\u3001Synopsys Design Compiler (Fusion Compiler)\u3001Cadence Genus\u306a\u3069\u304c\u5b58\u5728\u3057\u307e\u3059\u3002</p>"},{"location":"week1/#_2","title":"\u914d\u7f6e\u914d\u7dda","text":"<p>\u914d\u7f6e\u914d\u7dda (Place and route, P&amp;R, PnR) \u306f\u8ad6\u7406\u30b2\u30fc\u30c8\u30ec\u30d9\u30eb\u306e\u56de\u8def\u3092\u7269\u7406\u7684\u306a\u30ec\u30a4\u30a2\u30a6\u30c8\u3078\u3068\u5909\u63db\u3057\u3066\u3044\u304f\u5de5\u7a0b\u3067\u3059\u3002\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u3092\u7269\u7406\u7684\u306b\u3069\u306e\u3088\u3046\u306b\u914d\u7f6e\u3057\u3001\u914d\u7dda\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002</p> \u7c21\u6613\u7684\u306b\u8868\u73fe\u3057\u305f\u914d\u7f6e\u914d\u7dda\u30d5\u30ed\u30fc\u3002 <p>\u30d5\u30ed\u30a2\u30d7\u30e9\u30f3\u3067\u306f\u3001\u30c1\u30c3\u30d7\u5168\u4f53\u306e\u30b5\u30a4\u30ba\u3084\u5165\u51fa\u529b\u30d1\u30c3\u30c9\u306e\u4f4d\u7f6e\u3001\u691c\u8a3c\u6e08\u306e\u5927\u304d\u306a\u30de\u30af\u30ed\u30d6\u30ed\u30c3\u30af\u306e\u4f4d\u7f6e\u6c7a\u3081\u3001\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u3092\u81ea\u52d5\u914d\u7f6e\u3057\u3066\u3044\u304f\u9818\u57df\u306e\u4f4d\u7f6e\u6c7a\u3081\u3001\u306a\u3069\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\u305d\u306e\u5f8c\u914d\u7f6e\u3067\u306f\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u3092\u5177\u4f53\u7684\u306a\u5834\u6240\u306b\u81ea\u52d5\u7684\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002\u30af\u30ed\u30c3\u30af\u30c4\u30ea\u30fc\u5408\u6210 (CTS) \u3067\u306f\u3001\u30af\u30ed\u30c3\u30af\u4fe1\u53f7\u3092\u30c1\u30c3\u30d7\u5168\u4f53\u306b\u5747\u7b49\u306b\u5206\u914d\u3059\u308b\u305f\u3081\u306e\u56de\u8def\u3092\u69cb\u6210\u3057\u307e\u3059\u3002\u30d0\u30c3\u30d5\u30a1\u306e\u633f\u5165\u3084\u30c4\u30ea\u30fc\u72b6\u306e\u914d\u7dda\u306b\u3088\u3063\u3066\u3001\u30b9\u30ad\u30e5\u30fc\u3084\u9045\u5ef6\u3092\u6700\u5c0f\u5316\u3057\u307e\u3059\u3002\u6700\u5f8c\u306b\u3001\u30bb\u30eb\u9593\u3092\u914d\u7dda\u3057\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5f97\u307e\u3059\u3002\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u60c5\u5831\u3084\u5236\u7d04\u306f\u3001\u5404\u5de5\u7a0b\u3067\u5229\u7528\u3055\u308c\u307e\u3059\u3002</p> <p>\u914d\u7f6e\u914d\u7dda\u306b\u3064\u3044\u3066\u3082\u3001\u4e00\u9023\u306e\u30d5\u30ed\u30fc\u306f\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u307e\u3059\u3002\u4ee3\u8868\u7684\u306a\u30c4\u30fc\u30eb\u3068\u3057\u3066\u3001Synopsys IC Compiler (Fusion Compiler)\u3001Cadence Innovus\u306a\u3069\u304c\u5b58\u5728\u3057\u307e\u3059\u3002</p> <p>\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u306e\u8a95\u751f</p> <p>\u3055\u3066\u3001\u3053\u306e\u3088\u3046\u306a\u8a2d\u8a08\u30d5\u30ed\u30fc\u3092\u5b9f\u73fe\u3059\u308b\u4e0a\u3067\u91cd\u8981\u306a\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u3084\u914d\u7f6e\u914d\u7dda\u30c4\u30fc\u30eb\u306f\u3001\u3044\u3064\u9803\u751f\u307e\u308c\u305f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u521d\u671f\u306e\u4ee3\u8868\u7684\u306a\u4f8b\u3068\u3057\u3066\u3001Intel i386\u304c\u77e5\u3089\u308c\u3066\u3044\u307e\u3059\u3002i386\u306f32-bit\u306e\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u3067\u3001x86\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3084\u305d\u306e\u5f8c\u306eOS\u3084PC\u306e\u9686\u76db\u3092\u8a9e\u308b\u4e0a\u3067\u3082\u91cd\u8981\u306aVLSI\u3067\u3059\u304c\u3001VLSI\u8a2d\u8a08\u6280\u8853\u306e\u89b3\u70b9\u3067\u3082\u91cd\u8981\u306a\u7bc0\u76ee\u3092\u6210\u3057\u3066\u3044\u307e\u3059\u3002i386\u306e\u5185\u90e8\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u305f\u3057\u304b\u306b\u3001\u4e00\u90e8\u306e\u30c7\u30a3\u30b8\u30bf\u30eb\u56de\u8def\u304c\u898f\u683c\u5316\u3055\u308c\u305f\u30bb\u30eb\u306b\u3088\u3063\u3066\u69cb\u6210\u3055\u308c\u3066\u304a\u308a\u3001\u73fe\u5728\u306e\u914d\u7f6e\u914d\u7dda\u30d5\u30ed\u30fc\u3067\u8a2d\u8a08\u3057\u305f\u30de\u30af\u30ed\u3068\u8fd1\u3044\u898b\u305f\u76ee\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5185\u90e8\u69cb\u9020\u306b\u3064\u3044\u3066\u8abf\u67fb\u3057\u305f\u30d6\u30ed\u30b0\u8a18\u4e8b\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 \u307e\u305f\u3001\u7c73\u56fd\u306e\u30d9\u30eb\u7814\u7a76\u6240\u3067\u3082\u540c\u69d8\u306bPolycell\u3068\u3044\u3046\u540d\u524d\u3067\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u306e\u7814\u7a76\u304c\u306a\u3055\u308c\u3066\u304a\u308a \"An optimum channel-routing algorithm for polycell layouts of integrated circuits,\" DAC1988.\u306e\u3088\u3046\u306a\u8ad6\u6587\u3067\u5f53\u6642\u306e\u6280\u8853\u306b\u3064\u3044\u3066\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>AI\u6642\u4ee3\u306eVLSI\u8a2d\u8a08\u30d5\u30ed\u30fc</p> <p>\u73fe\u5728\u3001\u3042\u3089\u3086\u308b\u3082\u306e\u306e\u8a2d\u8a08\u958b\u767a\u30d5\u30ed\u30fc\u306bAI/ML\u6280\u8853\u304c\u5c0e\u5165\u3055\u308c\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u3042\u308b\u3044\u306f\u3001\u591a\u304f\u306e\u3082\u306e\u304c\u65e2\u306bAI\u306b\u3088\u3063\u3066\u8a2d\u8a08\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002VLSI\u3082\u4f8b\u5916\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30a2\u30ab\u30c7\u30df\u30c3\u30af\u306a\u4e16\u754c\u3067\u306fAI/ML\u3084\u8a2d\u8a08\u81ea\u52d5\u5316 (EDA) \u95a2\u9023\u306e\u4f1a\u8b70\u3067\u305d\u3046\u3057\u305f\u30c8\u30d4\u30c3\u30af\u304c\u76db\u308a\u4e0a\u304c\u308a\u3092\u898b\u305b\u308b\u307b\u304b\u3001ACM/IEEE International Symposium on Machine Learning for CAD (MLCAD) \u306e\u3088\u3046\u306a\u5c02\u9580\u306e\u4f1a\u8b70\u304c\u7acb\u3061\u4e0a\u304c\u308b\u306a\u3069\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5148\u306e\u4e16\u754c\u3067\u306f\u3001AI\u306e\u5229\u7528\u3092\u524d\u63d0\u3068\u3057\u305f\u3068\u304d\u3001VLSI\u8a2d\u8a08\u306b\u304a\u3051\u308b\u968e\u5c64\u5316\u30fb\u62bd\u8c61\u5316\u3084\u305d\u308c\u3089\u306e\u9593\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f\u3069\u3046\u3042\u308b\u3079\u304d\u306a\u306e\u304b\u3001\u3068\u3044\u3046\u554f\u3044\u304c\u6975\u3081\u3066\u91cd\u8981\u306a\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u304f\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3046\u3057\u305f\u3053\u3068\u3092\u8003\u3048\u3066\u3044\u304f\u306b\u5f53\u305f\u3063\u3066\u306e\u51fa\u767a\u70b9\u3068\u3057\u3066\u3082\u3001\u3084\u306f\u308a\u3001\u307e\u305a\u4eba\u9593\u306b\u3068\u3063\u3066\u975e\u5e38\u306b\u9069\u3057\u3066\u3044\u305f\u3053\u308c\u307e\u3067\u306e\u8a2d\u8a08\u30d5\u30ed\u30fc\u306b\u3064\u3044\u3066\u5b66\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"week1/#_3","title":"\u30d7\u30ed\u30bb\u30c3\u30b5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3","text":"<p>\u3055\u3066\u3001\u672c\u8b1b\u7fa9\u3067\u306f\u3001\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u3092VLSI\u3068\u3057\u3066\u5b9f\u73fe\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\u5148\u306b\u8ff0\u3079\u305fVLSI\u306e\u8a2d\u8a08\u30d5\u30ed\u30fc\u3092\u632f\u308a\u8fd4\u3063\u3066\u307f\u308b\u3068\u3001\u307e\u305a\u30de\u30a4\u30af\u30ed\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u7b56\u5b9a\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3057\u305f\u3002\u307e\u305f\u3001\u3055\u3089\u306b\u62bd\u8c61\u5ea6\u306e\u9ad8\u3044\u8a2d\u8a08\u3068\u3057\u3066\u3001\u547d\u4ee4\u30bb\u30c3\u30c8\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u3057\u305f\u3001\u3053\u3046\u3057\u305f\u62bd\u8c61\u5ea6\u306e\u8a2d\u8a08\u3092\u4e00\u822c\u306b\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u547c\u3073\u307e\u3059\u3002\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3064\u3044\u3066\u5b66\u3093\u3060\u7d4c\u9a13\u306e\u3042\u308b\u65b9\u306f\u3001\u3053\u306e\u8fba\u308a\u306e\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> VLSI\u8a2d\u8a08\u30d5\u30ed\u30fc\u306b\u304a\u3051\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u4f4d\u7f6e\u4ed8\u3051\u3002"},{"location":"week1/#_4","title":"\u6c4e\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u5c02\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3","text":"<p>\u6c4e\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u5c02\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u305d\u306e\u540d\u306e\u901a\u308a\u3001\u6c4e\u7528\u6027\u304c\u9ad8\u304f\u69d8\u3005\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u53ef\u80fd\u306a\u30d7\u30ed\u30bb\u30c3\u30b5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u3001\u7279\u5b9a\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c02\u7528\u3067\u305d\u308c\u306b\u5bfe\u3057\u3066\u9ad8\u3044\u6027\u80fd\u3084\u96fb\u529b\u52b9\u7387\u3092\u9054\u6210\u53ef\u80fd\u306a\u30d7\u30ed\u30bb\u30c3\u30b5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u6307\u3057\u3066\u3044\u307e\u3059\u3002\u73fe\u4ee3\u3067\u306f\u591a\u304f\u306eVLSI\u306f\u6c4e\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u5c02\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u6df7\u8f09\u3057\u305f\u30d8\u30c6\u30ed\u30b8\u30cb\u30a2\u30b9\u306a\u69cb\u6210\u3092\u3068\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u3053\u308c\u3089\u306b\u660e\u78ba\u306a\u7dda\u3092\u5f15\u304f\u3053\u3068\u306f\u96e3\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u672c\u8b1b\u7fa9\u3067\u306f\u3001\u6c4e\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u3057\u3066\u3001\u6c4e\u7528\u6027\u306e\u9ad8\u3044ISA\u3092\u6301\u3061\u3001\u591a\u69d8\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u5b9f\u884c\u53ef\u80fd\u306a\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u6271\u3044\u307e\u3059\u3002\u4e00\u822c\u306b\u3001CPU\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3082\u306e\u3067\u3059\u3002</p> <p>Open Question: FPGA\u306f\u6c4e\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3057\u3087\u3046\u304b? \u305d\u308c\u3068\u3082\u5c02\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3057\u3087\u3046\u304b?</p> <p>Open Question: \u91cf\u5b50\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u6c4e\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3057\u3087\u3046\u304b? \u305d\u308c\u3068\u3082\u5c02\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3057\u3087\u3046\u304b?</p>"},{"location":"week1/#risc","title":"RISC\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5","text":"<p>\u547d\u4ee4\u30bb\u30c3\u30c8\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u5206\u985e\u3068\u3057\u3066\u3001CISC\u3068RISC\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002RISC ISA\u306f\u3001\u307e\u3055\u306bVLSI\u304c\u9686\u76db\u3057\u3001\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u304cVLSI\u3068\u3057\u3066\u3001\u3059\u306a\u308f\u3061\u3001\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u3057\u3066\u5b9f\u73fe\u3055\u308c\u59cb\u3081\u305f\u6642\u4ee3\u306b\u8a95\u751f\u3057\u307e\u3057\u305f\u3002</p> <p>\"RISC I: A Reduced Instruction Set VLSI Computer,\" ISCA1981.</p> <p>1\u30b5\u30a4\u30af\u30eb\u3067\u5b9f\u884c\u53ef\u80fd\u304b\u3064\u56fa\u5b9a\u9577\u306e\u547d\u4ee4\u3001\u30ed\u30fc\u30c9\u547d\u4ee4\u30fb\u30b9\u30c8\u30a2\u547d\u4ee4\u306e\u307f\u306b\u3088\u308b\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u3068\u3044\u3063\u305fRISC\u306e\u7279\u5fb4\u306f\u3001\u8a2d\u8a08\u306e\u5358\u7d14\u5316\u3092\u3082\u305f\u3089\u3057\u3001VLSI\u3068\u3057\u3066\u306e\u8a2d\u8a08\u30fb\u6700\u9069\u5316\u3092\u5bb9\u6613\u306a\u3082\u306e\u306b\u3057\u307e\u3057\u305f\u3002</p> <p>\u73fe\u4ee3\u306e\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u591a\u304f\u3082\u3001\u3053\u3046\u3057\u305fRISC\u306e\u8a2d\u8a08\u601d\u60f3\u306b\u57fa\u3065\u304f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u63a1\u7528\u3057\u305f\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u3057\u3066\u5b9f\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u7279\u306b\u3053\u306e\u8b1b\u7fa9\u3067\u306f\u3001\u30b7\u30f3\u30d7\u30eb\u304b\u3064\u6d17\u7df4\u3055\u308c\u305fRISC ISA\u3067\u3042\u308b\u3001RISC-V ISA\u3092\u63a1\u7528\u3057\u3001\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u8a2d\u8a08\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p> RISC-V\u306e\u30ed\u30b4\u3002 <p>\u30aa\u30fc\u30d7\u30f3\u306aVLSI\u8a2d\u8a08\u74b0\u5883</p> <p>\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u4e16\u754c\u3067\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5316\u304c\u69d8\u3005\u306a\u6210\u529f\u3092\u751f\u3093\u3060\u3088\u3046\u306b\u3001VLSI\u8a2d\u8a08\u3068\u3044\u3046\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u4e16\u754c\u3067\u3082\u8a2d\u8a08\u8cc7\u7523\u3084\u8a2d\u8a08\u30c4\u30fc\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\u5316\u3001\u305d\u306e\u6d3b\u7528\u304c\u8a66\u307f\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u793a\u3057\u305fRISC-V ISA\u3082\u305d\u306e\u4e00\u4f8b\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30aa\u30fc\u30d7\u30f3\u306a\u8a2d\u8a08\u74b0\u5883\u306b\u3064\u3044\u3066\u306f\u3001\u5f8c\u306e\u8b1b\u7fa9\u3067\u518d\u8a2a\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002</p>"},{"location":"week1/#_5","title":"\u5bbf\u984c","text":"<p>\u4eca\u56de\u306f\u30ac\u30a4\u30c0\u30f3\u30b9\u306a\u306e\u3067\u3053\u3053\u307e\u3067\u3067\u3059\u3002\u5bbf\u984c\u3068\u3057\u3066\u4ee5\u4e0b\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u306b\u7528\u3044\u308b\u8a2d\u8a08\u74b0\u5883\u306e\u6e96\u5099\u306b\u306a\u308a\u307e\u3059\u3002</p> <ol> <li>\u8b1b\u7fa9\u3067\u5229\u7528\u3059\u308bPC\u4e0a\u3067\u516c\u958b\u9375\u3092\u4f5c\u6210\u3057\u3001Slack\u30c1\u30e3\u30f3\u30cd\u30eb\u3078\u5171\u6709\u3057\u3066\u304f\u3060\u3055\u3044 (\u9031\u672b\u307e\u3067\u306b\u304a\u9858\u3044\u3057\u307e\u3059)\u3002</li> <li>\u8b1b\u7fa9\u3067\u5229\u7528\u3059\u308bPC\u306bVNC Viewer (\u305f\u3068\u3048\u3070\u3053\u308c)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002</li> </ol>"},{"location":"week1/#_6","title":"\u6b21\u56de\u4e88\u544a","text":"<p>\u6b21\u56de\u306f\u3001\u6c4e\u7528\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u5b9f\u969b\u306b\u8a2d\u8a08\u3057\u3066\u3044\u304d\u307e\u3059\u3002SystemVerilog\u3084RISC-V ISA\u3001RISC-V\u306b\u57fa\u3065\u304f\u30d7\u30ed\u30bb\u30c3\u30b5\u306b\u3064\u3044\u3066\u3001\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u4e88\u7fd2\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"week2/","title":"\u7b2c2\u56de \u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u8a2d\u8a081","text":"<p>\u672c\u65e5\u306e\u8b1b\u7fa9\u5185\u5bb9</p> <ul> <li>\u8a2d\u8a08\u74b0\u5883</li> <li>SystemVerilog\u5165\u9580</li> <li>RISC-V ISA\u5165\u9580</li> <li>\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u8a2d\u8a08 (1)</li> </ul>"},{"location":"week2/#_1","title":"\u8a2d\u8a08\u74b0\u5883","text":"<p>SystemVerilog\u3092\u7528\u3044\u3066\u8a18\u8ff0\u3057\u305fRTL\u8a2d\u8a08\u304c\u6b63\u5e38\u306b\u52d5\u4f5c\u3059\u308b\u304b\u691c\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001\u672c\u8b1b\u7fa9\u3067\u306f\u3001HDL\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u3042\u308b\u3001Cadence Xcelium\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u3053\u306e\u30c4\u30fc\u30eb\u3084\u3001\u3053\u308c\u304c\u5c0e\u5165\u3055\u308c\u305f\u8a2d\u8a08\u74b0\u5883\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u5225\u9014\u8cc7\u6599\u3092\u7528\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u3082\u3057\u74b0\u5883\u306e\u4e0d\u5177\u5408\u7b49\u3067\u5229\u7528\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u4ed6\u306e\u5c0e\u5165\u3057\u3084\u3059\u3044HDL\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3068\u3057\u3066</p> <ul> <li>Verilator<ul> <li>Verilator\u306eGitHub\u30ea\u30dd\u30b8\u30c8\u30ea</li> <li>Verilator\u306e\u95a2\u9023\u8cc7\u6599</li> </ul> </li> <li>Icarus Verilog</li> </ul> <p>\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u3092\u5229\u7528\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\u57fa\u672c\u7684\u306b\u304a\u597d\u307f\u306e\u74b0\u5883\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u3060\u3057\u3001\u6b21\u56de\u4ee5\u964d\u306b\u304a\u3053\u306a\u3046\u8ad6\u7406\u5408\u6210\u3084\u914d\u7f6e\u914d\u7dda\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u3067\u6e96\u5099\u3057\u305f\u74b0\u5883\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3053\u3068\u3092\u305c\u3072\u78ba\u8a8d\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u306a\u304a\u3001\u4ed6\u306eHDL\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u306e\u4f8b\u3068\u3057\u3066\u3001Siemens ModelSim/Questa\u3068\u3044\u3063\u305f\u5546\u7528\u30c4\u30fc\u30eb\u3082\u540c\u69d8\u306e\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u4eca\u5f8cVLSI\u8a2d\u8a08\u306b\u643a\u308f\u308b\u4e2d\u3067\u4f7f\u3046\u6a5f\u4f1a\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002</p>"},{"location":"week2/#systemverilog-101","title":"SystemVerilog 101","text":"<p>\u672c\u8b1b\u7fa9\u3067\u306f\u3001SystemVerilog\u3092\u7528\u3044\u3066\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306eRTL\u8a2d\u8a08\u3092\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3059\u3002SystemVerilog\u306fVerilog HDL\u306e\u5f8c\u7d99\u3001\u304b\u3064\u4e0a\u4f4d\u4e92\u63db\u306b\u3042\u305f\u308b\u3082\u306e\u3067\u3001\u6587\u6cd5\u306e\u591a\u304f\u306fVerilog HDL\u3068\u5171\u901a\u3057\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001SystemVerilog\u3067\u306f\u578b\u3084\u5236\u5fa1\u69cb\u6587\u304c\u5f37\u5316\u3055\u308c\u3001\u5b89\u5168\u3067\u8aad\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>SystemVerilog\u306b\u306f\u3001\u8a2d\u8a08\u3001\u691c\u8a3c\u306b\u304a\u3044\u3066\u305d\u308c\u305e\u308c\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\u672c\u8b1b\u7fa9\u3067\u89e6\u308c\u308b\u306e\u306f\u305d\u306e\u4e00\u90e8\u306b\u7559\u307e\u308a\u3001\u307e\u305f\u8a2d\u8a08\u306e\u65b9\u304c\u4e2d\u5fc3\u306b\u306a\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001SystemVerilog\u306f\u672c\u6765\u3001\u8a2d\u8a08\u3068\u691c\u8a3c\u306e\u7d71\u4e00\u8a00\u8a9e\u3092\u76ee\u6307\u3057\u3066\u304a\u308a\u3001\u691c\u8a3c\u7528\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd\u3082\u591a\u6570\u52a0\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u5927\u898f\u6a21\u306aVLSI\u3092\u7cbe\u7dfb\u306b\u691c\u8a3c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u3042\u308b\u3044\u306f\u3001\u305d\u3046\u3057\u305fVLSI\u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u8907\u6570\u306eIP\u3078\u3068\u5206\u5272\u3057\u3001\u7d71\u4e00\u7684\u306a\u691c\u8a3c\u3092\u304a\u3053\u306a\u3046\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306a\u3069\u306f\u3001\u305d\u306e\u3088\u3046\u306a\u691c\u8a3c\u6a5f\u80fd\u304c\u91cd\u8981\u306b\u306a\u308a\u307e\u3059\u3002SystemVerilog\u306b\u57fa\u3065\u3044\u3066\u6a19\u6e96\u5316\u3055\u308c\u305f\u691c\u8a3c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bUVM (Universal Verification Methodology) \u306e\u5b58\u5728\u306b\u3064\u3044\u3066\u306f\u3001\u7279\u306b\u899a\u3048\u3066\u304a\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002</p>"},{"location":"week2/#systemverilog","title":"SystemVerilog\u624b\u7fd2\u3044","text":"<p>HDL\u306f\u56de\u8def\u56f3\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e\u8a00\u8a9e\u3067\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u3088\u3046\u306b\u624b\u7d9a\u304d\u3092\u66f8\u304f\u306e\u3067\u306f\u306a\u304f\u3001\u56de\u8def\u305d\u306e\u3082\u306e\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u3067\u3057\u305f\u3002Verilog/SystemVerilog\u306b\u304a\u3051\u308b\u56de\u8def\u90e8\u54c1\u306f<code>module</code>\u3068\u3044\u3046\u7bb1\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3001\u5165\u529b\u4fe1\u53f7<code>input</code>\u3068\u51fa\u529b\u4fe1\u53f7<code>output</code>\u3092\u6301\u3064\u306e\u3067\u3057\u305f\u3002</p> <p>SystemVerilog\u306b\u306f\u3001<code>logic</code>\u3068\u3044\u3046\u578b\u304c\u5b58\u5728\u3057\u3001\u4fe1\u53f7\u306f\u57fa\u672c\u7684\u306b<code>logic</code>\u3068\u3057\u3066\u5ba3\u8a00\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u3002</p> <p>\u6f14\u7fd2: AND\u56de\u8def\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u8ffd\u8a18\u3057\u3066\u30014-bit\u306eAND\u56de\u8def\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002 <pre><code>module and (\n    input logic [3:0] a,\n    input logic [3:0] b,\n    output logic [3:0] y\n);\n</code></pre></p> \u3053\u305f\u3048 <pre><code>module and (\n    input logic [3:0] a,\n    input logic [3:0] b,\n    output logic [3:0] y\n);\n    assign y = a &amp; b;\nendmodule\n</code></pre> <p>SystemVerilog\u3067\u306f\u3001\u8907\u96d1\u306a\u7d44\u307f\u5408\u308f\u305b\u56de\u8def\u306f\u3001<code>always_comb</code>\u306e\u4e2d\u3067<code>if</code>\u6587\u3084<code>case</code>\u6587\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002Verilog\u3068\u7570\u306a\u308a\u3001\u7d44\u307f\u5408\u308f\u305b\u56de\u8def\u5c02\u7528\u306e<code>always</code>\u304c\u3042\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u5b89\u5168\u306b\u56de\u8def\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u6f14\u7fd2: \u6bd4\u8f03\u56de\u8def\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u8ffd\u8a18\u3057\u3066\u3001<code>a</code>\u3068<code>b</code>\u3092\u6bd4\u8f03\u3057\u3001<code>a &gt; b</code>\u306e\u3068\u304d<code>1</code>\u3092\u51fa\u529b\u3059\u308b\u6bd4\u8f03\u56de\u8def\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002 <pre><code>module comp (\n    input logic [2:0] a,\n    input logic [2:0] b,\n    output logic y\n);\n</code></pre></p> \u3053\u305f\u3048 <pre><code>module comp (\n    input logic [2:0] a,\n    input logic [2:0] b,\n    output logic y\n);\n    always_comb begin\n        if (a &gt; b) begin\n            y = 1'b1;\n        end else begin\n            y = 1'b0;\n        end\nendmodule\n</code></pre> <p>\u307e\u305f\u3001<code>case</code>\u6587\u306b\u3064\u3044\u3066\u306f\u3001<code>unique</code>\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f75\u305b\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5206\u5c90\u6761\u4ef6\u304c\u540c\u6642\u306b2\u3064\u771f\u306b\u306a\u308b\u3053\u3068\u304c\u7121\u3044\u3088\u3046\u51e6\u7406\u7cfb\u3067\u4fdd\u8a3c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u6f14\u7fd2: \u30bb\u30ec\u30af\u30bf\u56de\u8def\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u8ffd\u8a18\u3057\u3066\u3001<code>sel</code>\u306b\u5fdc\u3058\u3066\u6b21\u306e\u3088\u3046\u306a<code>y</code>\u3092\u51fa\u529b\u3059\u308b\u30bb\u30ec\u30af\u30bf\u56de\u8def\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002</p> <ul> <li><code>sel</code>: 00 -&gt; <code>y</code>: 0001</li> <li><code>sel</code>: 01 -&gt; <code>y</code>: 0010</li> <li><code>sel</code>: 10 -&gt; <code>y</code>: 0100</li> <li><code>sel</code>: 11 -&gt; <code>y</code>: 1000</li> </ul> <pre><code>module sel (\n    input logic [1:0] sel,\n    output logic y\n);\n</code></pre> \u3053\u305f\u3048 <pre><code>module sel (\n    input logic [1:0] sel,\n    output logic y\n);\n    always_comb begin\n        unique case (sel)\n            2'b00: y = 4'b0001;\n            2'b01: y = 4'b0010;\n            2'b10: y = 4'b0100;\n            2'b11: y = 4'b1000;\n            // default: y = 4'b0001;  // \u5ff5\u306e\u305f\u3081\n        endcase\n    end\nendmodule\n</code></pre> <p>\u306a\u304a\u3001\u7c21\u5358\u306a\u6761\u4ef6\u306e\u7d44\u307f\u5408\u308f\u305b\u56de\u8def\u3067\u3042\u308c\u3070\u3001\u4e09\u9805\u6f14\u7b97\u5b50<code>? :</code>\u3092\u7528\u3044\u3066<code>assign</code>\u3067\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p>\u6f14\u7fd2: \u6700\u5927\u5024\u56de\u8def\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u8ffd\u8a18\u3057\u3066\u30012\u3064\u306e4-bit\u4fe1\u53f7<code>a</code>, <code>b</code>\u3092\u6bd4\u8f03\u3057\u3001\u5927\u304d\u3044\u65b9\u306e\u5024\u3092\u51fa\u529b\u3059\u308b\u56de\u8def\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002\u4e09\u9805\u6f14\u7b97\u5b50\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002 <pre><code>module max (\n    input logic [3:0] a,\n    input logic [3:0] b,\n    output logic [3:0] y\n);\n</code></pre></p> \u3053\u305f\u3048 <pre><code>module max (\n    input logic [3:0] a,\n    input logic [3:0] b,\n    output logic [3:0] y\n);\n    assign y = (a &gt; b) ? a : b;\nendmodule\n</code></pre> <p>\u9806\u5e8f\u56de\u8def\u306f\u3001<code>always_ff</code>\u306e\u4e2d\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u4ee3\u5165\u306b\u306f\u901a\u5e38\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u4ee3\u5165<code>&lt;=</code>\u3092\u7528\u3044\u307e\u3059\u3002<code>always_ff</code>\u306e\u4e2d\u306b\u8907\u6570\u306e\u4ee3\u5165\u6587\u3092\u8a18\u8ff0\u3059\u308b\u3068\u3057\u307e\u3057\u3087\u3046\u3002\u901a\u5e38\u3001\u4f9d\u5b58\u95a2\u4fc2\u3092\u6301\u305f\u306a\u3044\u8907\u6570\u306e\u5909\u6570\u306b\u5bfe\u3057\u3066\u3001\u30af\u30ed\u30c3\u30af\u9077\u79fb\u3068\u540c\u6642\u306b\u4e26\u5217\u306b\u5024\u304c\u4ee3\u5165\u3055\u308c\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u52d5\u4f5c\u3092\u5b9f\u73fe\u3059\u308b\u306e\u304c\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u4ee3\u5165\u3067\u3059\u3002\u8907\u6570\u306e\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u4ee3\u5165\u6587\u304c\u3042\u308b\u5834\u5408\u306b\u306f\u540c\u6642\u306b\u4ee3\u5165\u304c\u304a\u3053\u306a\u308f\u308c\u307e\u3059\u3002\u4e00\u65b9\u3001\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u4ee3\u5165<code>=</code>\u3067\u306f\u3001\u3042\u308b\u4ee3\u5165\u6587\u306e\u5b9f\u884c\u304c\u7d42\u4e86\u3059\u308b\u307e\u3067\u3001\u5f8c\u7d9a\u306e\u4ee3\u5165\u6587\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u3001\u30d6\u30ed\u30c3\u30af\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u4ee3\u5165\u306b\u9806\u5e8f\u95a2\u4fc2\u304c\u751f\u3058\u3001\u9806\u5e8f\u56de\u8def\u306b\u5bfe\u3057\u3066\u9069\u7528\u3059\u308b\u3068\u610f\u56f3\u3057\u306a\u3044\u52d5\u4f5c\u3068\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u6f14\u7fd2: DFF\u56de\u8def\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u8ffd\u8a18\u3057\u3066\u3001\u540c\u671f\u30ea\u30bb\u30c3\u30c8\u6a5f\u80fd\u4ed8\u304d\u306eDFF\u56de\u8def\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002 <pre><code>module dff (\n    input logic clk,\n    input logic rst_n,\n    input logic d,\n    output logic q\n);\n</code></pre></p> \u3053\u305f\u3048 <pre><code>module dff (\n    input logic clk,\n    input logic rst_n,\n    input logic d,\n    output logic q\n);\n    always_ff @(posedge clk) begin\n        if (!rst_n) begin\n            q &lt;= 1'b0;\n        end else begin\n            q &lt;= d;\n        end\n    end\nendmodule\n</code></pre> <p>\u307e\u305f\u3001SystemVerilog\u3067\u306f\u3001\u5b9a\u6570\u3068\u3057\u3066<code>parameter</code>\u3084<code>locaoparam</code>\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u524d\u8005\u306f<code>module</code>\u306e\u5916\u90e8\u304b\u3089\u6307\u5b9a\u53ef\u80fd\u306a\u3082\u306e\u3067\u3042\u308a\u3001\u5f8c\u8005\u306f<code>module</code>\u306e\u5185\u90e8\u3060\u3051\u3067\u4f7f\u3046\u5b9a\u6570\u3067\u3059\u3002</p> <pre><code>// bit\u5e45\u5909\u66f4\u53ef\u80fd\u306a\u52a0\u7b97\u5668\u306e\u4f8b\nmodule adder_param #(  \n  parameter int WIDTH = 8  // \u5916\u90e8\u304b\u3089\u5909\u66f4\u53ef\u80fd\u306a\u30d3\u30c3\u30c8\u5e45\n) (\n  input logic [WIDTH-1:0] a,\n  input logic [WIDTH-1:0] b,\n  output logic [WIDTH-1:0] y,\n  output logic overflow\n);\n\n  // \u52a0\u7b97\u7d50\u679c\u306e\u5185\u90e8\u30d3\u30c3\u30c8\u5e45\u3092\u62e1\u5f35 (1\u30d3\u30c3\u30c8\u4f59\u88d5\u3092\u6301\u305f\u305b\u308b)\n  localparam int SUM_WIDTH = WIDTH + 1;\n\n  // \u52a0\u7b97\u7d50\u679c\u3092\u4e00\u6642\u5909\u6570\u306b\u4fdd\u6301\n  logic [SUM_WIDTH-1:0] sum;\n\n  assign sum = a + b;\n  assign y = sum[WIDTH-1:0];  // \u4e0b\u4f4d\u30d3\u30c3\u30c8\u306e\u307f\u53d6\u308a\u51fa\u3059\n  assign overflow = sum[WIDTH];  // \u4e0a\u4f4d\u30d3\u30c3\u30c8\u304c1\u306a\u3089\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\n\nendmodule\n</code></pre> <p>\u6700\u5f8c\u306b\u7c21\u5358\u306a\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <p>\u6f14\u7fd2: \u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u8ffd\u8a18\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306a\u4ed5\u69d8\u3092\u6301\u3064\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002</p> <ul> <li>\u72b6\u614b\u306f\u3001OFF-&gt;ON-&gt;OFF-&gt;ON-&gt;OFF-&gt;......\u3068\u5909\u308f\u308b</li> <li>\u5165\u529b: toggle (1\u306e\u3068\u304d\u72b6\u614b\u304c\u30c8\u30b0\u30eb\u3059\u308b)</li> <li>\u51fa\u529b: toggle_out (\u73fe\u5728 ON \u72b6\u614b\u306a\u3089 1)</li> </ul> <pre><code>module toggle_fsm (\n    input logic clk,\n    input logic rst_n,\n    input logic toggle,\n    output logic toggle_out\n);\n\n    // typedef\u3068enum\u3092\u4f7f\u3063\u3066\u3053\u3053\u3067\u72b6\u614b\u306e\u5b9a\u7fa9\u3092\u3059\u308b\n\n    // \u5b9a\u7fa9\u3057\u305f\u72b6\u614b\n    state_t state, next_state;\n\n    // \u6b21\u72b6\u614b\u306e\u8a08\u7b97\n    always_comb begin\n        unique case (state)\n            OFF: next_state = ;\n            ON: next_state = ;\n            default: next_state = ;\n        endcase\n    end\n\n    // \u72b6\u614b\u66f4\u65b0\n    always_ff @(posedge clk) begin\n        if (!rst_n) begin\n            state &lt;= ;\n        end else begin\n            state &lt;= ;\n        end\n    end\n\n    // \u51fa\u529b\n    assign toggle_out = (state == );\n\nendmodule\n</code></pre> \u3053\u305f\u3048 <pre><code>module toggle_fsm (\n    input logic clk,\n    input logic rst_n,\n    input logic toggle,\n    output logic toggle_out\n);\n\n    typedef enum logic [0:0] {  // \u660e\u793a\u7684\u306b\u5e45\u3092\u6307\u5b9a\n        OFF = 1'b0,\n        ON  = 1'b1\n    } state_t;    \n\n    state_t state, next_state;\n\n    // \u6b21\u72b6\u614b\u306e\u8a08\u7b97\n    always_comb begin\n        unique case (state)\n            OFF: next_state = toggle ? ON : OFF;\n            ON: next_state = toggle ? OFF : ON;\n            default: next_state = OFF;\n        endcase\n    end\n\n    // \u72b6\u614b\u66f4\u65b0\n    always_ff @(posedge clk) begin\n        if (!rst_n) begin\n            state &lt;= OFF;\n        end else begin\n            state &lt;= next_state;\n        end\n    end\n\n    // \u51fa\u529b\n    assign toggle_out = (state == ON);\n\nendmodule\n</code></pre> <p>\u3053\u306e\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u306e\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u306e\u8a18\u8ff0\u3092\u793a\u3057\u307e\u3059\u3002\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u306b\u306f\u691c\u8a3c\u7528\u7279\u6709\u306e\u8a18\u8ff0\u304c\u3044\u304f\u3064\u304b\u5b58\u5728\u3059\u308b\u306e\u3067\u3057\u305f\u3002</p> <p>\u7279\u306b\u3001<code>assert</code>\u306f\u52d5\u4f5c\u4e2d\u306b\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u305f\u3081\u306b\u6709\u7528\u3067\u3001\u4ee5\u4e0b\u306e\u4f8b\u3067\u3082\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p> <pre><code>module tb_toggle_fsm;\n\n    // \u30af\u30ed\u30c3\u30af\u3001\u30ea\u30bb\u30c3\u30c8\u3001\u5165\u51fa\u529b\u4fe1\u53f7\u3092\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u5074\u306b\u7528\u610f\u3057\u3001\n    // \u5185\u90e8\u3067\u547c\u3073\u51fa\u3057\u305f\u30c6\u30b9\u30c8\u5bfe\u8c61\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u63a5\u7d9a\u3059\u308b\n    logic clk = 0;\n    logic rst_n = 0;\n    logic toggle;\n    logic toggle_out;\n\n    // \u30c6\u30b9\u30c8\u5bfe\u8c61\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u547c\u3073\u51fa\u3057\u306f\u3053\u306e\u3088\u3046\u306b\u304a\u3053\u306a\u3046\n    // \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5404\u5165\u51fa\u529b\u4fe1\u53f7\u306f \n    // .\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5404\u5165\u51fa\u529b\u4fe1\u53f7\u540d(\u63a5\u7d9a\u3059\u308b\u5916\u90e8\u4fe1\u53f7\u540d) \n    // \u3068\u3057\u3066\u5916\u90e8\u306e\u4fe1\u53f7\u3068\u63a5\u7d9a\u3059\u308b\n    toggle_fsm dut (\n        .clk(clk),\n        .rst_n(rst_n),\n        .toggle(toggle),\n        .toggle_out(toggle_out)\n    );\n\n    // \u30af\u30ed\u30c3\u30af\u751f\u6210\n    // #5\u306f\u30c7\u30a3\u30ec\u30a4\u3067\u30015\u5358\u4f4d\u6642\u9593\u6bce\u306bclk\u3092\u53cd\u8ee2\u3055\u305b\u308b\n    always #5 clk = ~clk;\n\n    // \u30ea\u30bb\u30c3\u30c8\u3068\u30c6\u30b9\u30c8\u64cd\u4f5c\n    // initial\u306f\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u958b\u59cb\u76f4\u5f8c\u304b\u30891\u56de\u9650\u308a\u306e\u5b9f\u884c\n    initial begin\n        // display\u306f\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u51fa\u529b\u7528\n        $display(\"Start test...\");\n        toggle = 0;\n        #2 rst_n = 0;  #10;\n        rst_n = 1;     #10;\n\n        // \u521d\u671f\u72b6\u614b: OFF\n        // assert\u306f\u6761\u4ef6\u30c1\u30a7\u30c3\u30af\u3067\u3001\u5931\u6557\u6642\u306b\u81ea\u52d5\u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u505c\u6b62\u53ef\u80fd\n        // \u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308c\u3070\u4f55\u3082\u8d77\u3053\u3055\u306a\u3044\n        assert(toggle_out == 0) else $fatal(\"Expected OFF at reset\");\n\n        // \u30c8\u30b0\u30eb\u3057\u3066ON\u3078\n        toggle = 1;  #10;\n        toggle = 0;  #10;\n        assert(toggle_out == 1) else $fatal(\"Expected ON after toggle\");\n\n        // \u30c8\u30b0\u30eb\u3057\u3066OFF\u3078\n        toggle = 1;  #10;\n        toggle = 0;  #10;\n        assert(toggle_out == 0) else $fatal(\"Expected OFF after toggle\");\n\n        $display(\"All assertions passed.\");\n        $finish;\n    end\n\nendmodule\n</code></pre> <p>\u6f14\u7fd2: \u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u3092\u4f7f\u3063\u305f\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3</p> <p>\u4e0a\u306etb_toggle_fsm.sv\u3092\u7528\u3044\u3066\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <p>Xcelium\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001<code>%xrun tb_toggle_fsm.sv toggle_fsm.sv</code>\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"week2/#_2","title":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04","text":"<p>SystemVerilog\u306e\u8a18\u8ff0\u30b9\u30bf\u30a4\u30eb\u3068\u3057\u3066\u306f\u3001\u305f\u3068\u3048\u3070\u3001lowRISC Verilog Coding Style Guide\u304c\u53c2\u8003\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\u30b7\u30f3\u30d7\u30eb\u304b\u3064\u53ef\u8aad\u6027\u304c\u9ad8\u304f\u3001\u8ad6\u7406\u5408\u6210\u53ef\u80fd\u306aRTL\u8a2d\u8a08\u3092\u8a18\u8ff0\u3057\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002OpenTitan\u306e\u3088\u3046\u306a\u5927\u898f\u6a21\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u5177\u4f53\u7684\u306b\u306f\u3001</p> <ul> <li>\u5404\u30d5\u30a1\u30a4\u30eb\u306b\u306f1\u3064\u306e<code>module</code>\u306e\u307f\u3092\u5b9a\u7fa9\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u306f \"<code>module</code>\u540d.sv\" \u3068\u3059\u308b</li> <li>\u4fe1\u53f7\u306b\u306f<code>logic</code>\u3092\u4f7f\u3046 (<code>wire</code>\u3084<code>reg</code>\u306f\u4f7f\u308f\u306a\u3044)</li> <li>\u30af\u30ed\u30c3\u30af\u99c6\u52d5\u306e\u8a18\u8ff0\u306f<code>always_ff</code>\u3001\u7d44\u307f\u5408\u308f\u305b\u56de\u8def\u306b\u306f<code>always_comb</code>\u3092\u4f7f\u3046<ul> <li>\u7c21\u5358\u306a\u7d44\u307f\u5408\u308f\u305b\u56de\u8def\u306f<code>assign</code>\u3092\u4f7f\u3063\u3066\u8a18\u8ff0\u3057\u3066\u3082ok</li> </ul> </li> <li><code>case</code>\u6587\u3067\u306f<code>unique</code>\u3092\u4f7f\u7528</li> <li>\u5b9a\u6570\u306b\u306f<code>parameter</code>\u3084<code>localparam</code>\u3092\u4f7f\u3046 (<code>define</code>\u306f\u4f7f\u308f\u306a\u3044)</li> </ul> <p>\u3042\u305f\u308a\u3092\u307e\u305a\u306f\u5b88\u3063\u3066\u307f\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002</p> <p>SystemVerilog\u306e\u7c21\u5358\u306a\u6b74\u53f2</p> <p>Verilog HDL\u306f\u3001 Automated Integrated Design Systems (\u5f8c\u306eGateway Design Automation) \u304c\u958b\u767a\u3057\u305fVerilog\u3084Verilog-XL\u3068\u3044\u3046\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u7528\u306e\u8a18\u8ff0\u8a00\u8a9e\u3068\u3057\u3066\u8a95\u751f\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001Verilog-XL\u306fCadence\u306e\u7269\u3068\u306a\u308a\u307e\u3057\u305f\u3002\u672c\u8b1b\u7fa9\u306e\u8a2d\u8a08\u74b0\u5883\u3067\u7528\u3044\u3066\u3044\u308bCadence Xcelium\u306fVerilog-XL\u306b\u69d8\u3005\u306a\u6a5f\u80fd\u3092\u7d71\u5408\u3057\u3001\u9032\u5316\u3055\u305b\u305f\u3082\u306e\u3067\u3059\u3002\u4e00\u65b9\u3001SystemVerilog\u306fCo-Design Automation\u304c1999\u5e74\u306b\u767a\u8868\u3057\u305fSuperlog\u304c\u539f\u578b\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002Verilog HDL\u304c\u8a2d\u8a08\u30fb\u691c\u8a3c\u305d\u308c\u305e\u308c\u306b\u304a\u3044\u3066\u62b1\u3048\u3066\u3044\u305f\u5f31\u70b9\u306e\u514b\u670d\u3092\u898b\u636e\u3048\u3001Verilog HDL\u3068C\u8a00\u8a9e\u305d\u308c\u305e\u308c\u306e\u5229\u70b9\u3092\u53d6\u308a\u5165\u308c\u308b\u3068\u3044\u3046\u65b9\u91dd\u3067\u958b\u767a\u304c\u9032\u3081\u3089\u308c\u305f\u3088\u3046\u3067\u3059\u3002SystemVerilog\u306f2005\u5e74\u306bIEEE\u306b\u3088\u3063\u3066\u6a19\u6e96\u5316\u3055\u308c\u3001\u73fe\u5728\u306b\u3044\u305f\u3063\u3066\u3044\u307e\u3059\u3002\u306a\u304a\u3001\u898f\u683c\u3068\u3057\u3066\u306eVerilog HDL\u306fSystemVerilog\u3078\u3068\u7d71\u5408\u3055\u308c\u3066\u304a\u308a\u3001SystemVerilog (IEEE 1800) \u304c\u552f\u4e00\u306e\u5f8c\u7d99\u3068\u3044\u3046\u304b\u305f\u3061\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"week2/#risc-v-isa","title":"RISC-V ISA","text":"<p>RISC-V (\u30ea\u30b9\u30af\u30fb\u30d5\u30a1\u30a4\u30d6) \u547d\u4ee4\u30bb\u30c3\u30c8\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 (ISA) \u306f\u30012010\u5e74\u3054\u308d\u3001UC Berkeley\u3067\u958b\u767a\u304c\u958b\u59cb\u3055\u308c\u305f\u30aa\u30fc\u30d7\u30f3\u306aISA\u3067\u3059\u3002\u5f53\u6642\u3001\u591a\u304f\u306eISA\u306f\u5546\u7528\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5fc5\u8981\u3067\u3001\u30a2\u30ab\u30c7\u30df\u30c3\u30af\u306a\u7814\u7a76\u3084\u6559\u80b2\u306b\u4f7f\u3044\u3065\u3089\u304b\u3063\u305f\u305f\u3081\u3001\u30aa\u30fc\u30d7\u30f3\u3067\u81ea\u7531\u306b\u4f7f\u3048\u308bISA\u3068\u3057\u3066\u8a2d\u8a08\u3055\u308c\u307e\u3057\u305f\u3002</p> <p>RISC\u306e\u539f\u5247\u306b\u57fa\u3065\u3044\u3066\u3001\u30b7\u30f3\u30d7\u30eb\u304b\u3064\u6d17\u7df4\u3055\u308c\u305f\u8a2d\u8a08\u3068\u306a\u3063\u3066\u3044\u308b\u307b\u304b\u3001\u30e2\u30b8\u30e5\u30e9\u5f62\u5f0f\u3068\u3044\u3046\u7279\u5fb4\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u547d\u4ee4\u30bb\u30c3\u30c8\u304c\u3001</p> <ul> <li>RV32I (\u57fa\u672c\u6574\u6570\u547d\u4ee4)</li> <li>RV32M (\u4e57\u9664\u7b97\u547d\u4ee4)</li> <li>RV32A (\u30a2\u30c8\u30df\u30c3\u30af\u547d\u4ee4)</li> <li>RV32F (\u5358\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u547d\u4ee4)</li> <li>RV32D (\u500d\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u547d\u4ee4)</li> <li>RV32C (\u5727\u7e2e\u547d\u4ee4) </li> </ul> <p>\u3068\u3044\u3063\u305f\u3088\u3046\u306b\u57fa\u672c\u547d\u4ee4\u30bb\u30c3\u30c8\u306e\u4ed6\u306b\u69d8\u3005\u306a\u62e1\u5f35\u547d\u4ee4\u30e2\u30b8\u30e5\u30fc\u30eb\u3078\u3068\u5206\u5272\u3055\u308c\u3066\u304a\u308a\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u306a\u304a\u3001RV32I or RV64I\u306b\u5bfe\u3057\u3066\u3001MAFD, Zicsr, Zifencei\u3068\u3044\u3063\u305f\u62e1\u5f35\u3092\u65bd\u3057\u305f\u3082\u306e\u3092RV32G or RV64G\u3068\u547c\u3073\u3001\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u6c4e\u7528\u7684\u306a\u547d\u4ee4\u30bb\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u73fe\u5728\u306f\u3001RISC-V International\u3068\u3044\u3046\u975e\u55b6\u5229\u56e3\u4f53\u304c\u3053\u3046\u3057\u305f\u4ed5\u69d8\u3092\u7ba1\u7406\u3057\u3066\u304a\u308a\u3001\u516c\u5f0f\u306a\u5404\u7a2e\u4ed5\u69d8\u3084\u5468\u8fba\u30c4\u30fc\u30eb\u306b\u3064\u3044\u3066\u306f</p> <ul> <li>\u516c\u5f0f\u30b5\u30a4\u30c8</li> <li>GitHub organization</li> </ul> <p>\u306b\u60c5\u5831\u304c\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u4ee5\u964d\u3067\u306f\u3001\u6700\u3082\u30b7\u30f3\u30d7\u30eb\u306a32-bit ISA\u3001RV32I\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u672c\u8b1b\u7fa9\u3067\u306f\u3053\u306eRV32I\u3092\u7528\u3044\u3066\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u8a2d\u8a08\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001\u3053\u306e\u547d\u4ee4\u30bb\u30c3\u30c8\u3060\u3051\u306e\u5b9f\u88c5\u3067\u3082C\u3084Rust\u3068\u3044\u3063\u305f\u9ad8\u7d1a\u8a00\u8a9e\u3067\u8a18\u8ff0\u3057\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u304d\u3061\u3093\u3068\u30d7\u30ed\u30bb\u30c3\u30b5\u4e0a\u3067\u52d5\u4f5c\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"week2/#risc-v-rv32i","title":"RISC-V RV32I","text":"<p>RISC-V RV32I\u306e\u4e2d\u3067\u4eca\u56de\u5b9f\u88c5\u3057\u3066\u3044\u304f\u547d\u4ee4\u3092\u3042\u308b\u7a0b\u5ea6\u306e\u5927\u304d\u3055\u3067\u5206\u985e\u3059\u308b\u3068\u3001</p> <ul> <li>\u7b97\u8853\u6f14\u7b97\u547d\u4ee4</li> <li>\u8ad6\u7406\u6f14\u7b97\u547d\u4ee4</li> <li>\u6bd4\u8f03\u547d\u4ee4</li> <li>\u30b7\u30d5\u30c8\u547d\u4ee4</li> <li>LUI\u547d\u4ee4/AUIPC\u547d\u4ee4</li> <li>\u30ed\u30fc\u30c9\u547d\u4ee4</li> <li>\u30b9\u30c8\u30a2\u547d\u4ee4</li> <li>\u6761\u4ef6\u5206\u5c90\u547d\u4ee4</li> <li>\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4</li> </ul> <p>\u3068\u3044\u3063\u305f\u3082\u306e\u304c\u3042\u308a\u3001\u5408\u8a0837\u7a2e\u985e\u306e\u547d\u4ee4\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306b\u3064\u3044\u3066\u3001\u9806\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p> \u7b97\u8853\u6f14\u7b97\u547d\u4ee4\u3068\u8ad6\u7406\u6f14\u7b97\u547d\u4ee4\u3002 <p>\u307e\u305a\u3001\u7b97\u8853\u6f14\u7b97\u547d\u4ee4\u3068\u8ad6\u7406\u6f14\u7b97\u547d\u4ee4\u3067\u3059\u3002\u5404\u547d\u4ee4\u306f32bit\u304b\u3089\u6210\u3063\u3066\u304a\u308a\u3001\u4e0b\u4f4d7bit\u3067\u547d\u4ee4\u7a2e\u5225\u3092\u8868\u3057\u3001\u305d\u306e\u4ed6\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u3001</p> <ul> <li><code>rs1</code>: \u30bd\u30fc\u30b9\u30ec\u30b8\u30b9\u30bf\u756a\u53f71 (5bit)</li> <li><code>rs2</code>: \u30bd\u30fc\u30b9\u30ec\u30b8\u30b9\u30bf\u756a\u53f72 (5bit)</li> <li><code>rd</code>: \u30c7\u30b9\u30c6\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30ec\u30b8\u30b9\u30bf\u756a\u53f7 (5bit)</li> <li><code>imm</code>: \u5373\u5024</li> </ul> <p>\u3068\u3044\u3063\u305f\u3082\u306e\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u3001\u30ec\u30b8\u30b9\u30bf\u756a\u53f7\u306f32\u500b\u5b58\u5728\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u3046\u3061\u3069\u3053\u306b\u683c\u7d0d\u3055\u308c\u305f\u5024\u3092\u6f14\u7b97\u306b\u7528\u3044\u308b\u304b\u3001\u3042\u308b\u3044\u306f\u3069\u3053\u306b\u6f14\u7b97\u7d50\u679c\u3092\u66f8\u304d\u8fbc\u3080\u304b\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u30025bit\u306732\u7a2e\u985e\u306e\u30ec\u30b8\u30b9\u30bf\u3044\u305a\u308c\u304b\u3092\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u5373\u5024\u306f\u3001\u547d\u4ee4\u306b\u76f4\u63a5\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u5b9a\u6570\u3067\u3001\u3053\u306e\u5024\u3082\u6f14\u7b97\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002</p> <p>\u305d\u308c\u305e\u308c\u306e\u547d\u4ee4\u306e\u5185\u5bb9\u306b\u6cbf\u3063\u305f\u6f14\u7b97\u304c\u3053\u3046\u3057\u305f\u30bd\u30fc\u30b9\u30ec\u30b8\u30b9\u30bf\u306e\u5024\u3084\u5373\u5024\u3092\u7528\u3044\u3066\u5b9f\u884c\u3055\u308c\u3001\u30c7\u30b9\u30c6\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30ec\u30b8\u30b9\u30bf\u3078\u3068\u66f8\u304d\u8fbc\u307e\u308c\u307e\u3059\u3002RISC-V ISA\u3067\u306f\u3001\u57fa\u672c\u7684\u306b\u5373\u5024\u306f\u300132-bit\u306e\u5024\u3078\u3068\u7b26\u53f7\u62e1\u5f35\u3055\u308c\u3066\u304b\u3089\u6f14\u7b97\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u7b26\u53f7\u62e1\u5f35\u3068\u306f\u3001\u7b26\u53f7\u30d3\u30c3\u30c8\u3092\u4fdd\u3063\u305f\u307e\u307e\u62e1\u5f35\u3059\u308b\u65b9\u6cd5\u3067\u3001\u305f\u3068\u3048\u3070\u6700\u4e0a\u4f4d\u30d3\u30c3\u30c8\u304c0\u306a\u3089\u5de6\u5074\u306b0\u3092\u57cb\u3081\u3066\u3044\u304d\u30011\u306a\u30891\u3092\u57cb\u3081\u3066\u3044\u304f\u306e\u3067\u3057\u305f\u3002\u307e\u305f\u3001\u8ad6\u7406\u6f14\u7b97\u547d\u4ee4\u3067\u306f\u3001\u30d3\u30c3\u30c8\u6bce\u306b\u6f14\u7b97\u304c\u304a\u3053\u306a\u308f\u308c\u307e\u3059\u3002</p> \u6bd4\u8f03\u547d\u4ee4\u3068\u30b7\u30d5\u30c8\u547d\u4ee4\u3002 <p>\u6bd4\u8f03\u547d\u4ee4\u306f\u3001\u5404\u7a2e\u6bd4\u8f03\u306e\u7d50\u679c\u3068\u3057\u3066\u30c7\u30b9\u30c6\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30ec\u30b8\u30b9\u30bf\u306b0\u304b1\u306e\u5024\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002</p> <p>\u30b7\u30d5\u30c8\u547d\u4ee4\u3067\u306f\u3001\u30b7\u30d5\u30c8\u306e\u91cf\u3068\u3057\u3066\u5373\u5024\u3084rs2\u306e\u4e0b\u4f4d5bit\u306e\u307f\u304c\u5229\u7528\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\u53f3\u30b7\u30d5\u30c8\u547d\u4ee4\u306b\u306f\u30b7\u30d5\u30c8\u306e\u7d50\u679c\u3068\u3057\u3066\u7a7a\u3044\u305f\u5de6\u5074\u306e\u30d3\u30c3\u30c8\u306b0\u3092\u57cb\u3081\u308b\u8ad6\u7406\u53f3\u30b7\u30d5\u30c8\u547d\u4ee4\u3068\u3001\u7a7a\u3044\u305f\u5de6\u5074\u306e\u30d3\u30c3\u30c8\u306b\u7b26\u53f7\u30d3\u30c3\u30c8 (\u6700\u4e0a\u4f4d\u30d3\u30c3\u30c8) \u3092\u57cb\u3081\u308b\u7b97\u8853\u53f3\u30b7\u30d5\u30c8\u547d\u4ee4\u304c\u3042\u308a\u307e\u3059\u3002</p> LUI\u547d\u4ee4\u3068AUIPC\u547d\u4ee4\u3002 <p>LUI\u3068AUIPC\u306f\u5c11\u3057\u7279\u6b8a\u306a\u547d\u4ee4\u3067\u3059\u3002LUI\u306f20bit\u306e\u5373\u5024\u3092\u4e0a\u4f4d20bit\u3068\u3057\u3066\u4e0b\u4f4d12bit\u306f\u30bc\u30ed\u3067\u57cb\u3081\u3001\u30ec\u30b8\u30b9\u30bf\u306b\u66f8\u304d\u8fbc\u3080\u547d\u4ee4\u3067\u3059\u3002\u3053\u308c\u306b\u7d9a\u3044\u3066ADDI\u306a\u3069\u3067\u4e0b\u4f4dbit\u3092\u52a0\u3048\u308b\u3053\u3068\u3067\u300132bit\u306e\u5927\u304d\u306a\u5b9a\u6570\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002AUIPC\u306f20bit\u306e\u5373\u5024\u3092\u4e0a\u4f4d20bit\u3068\u3057\u3066PC (\u30d7\u30ed\u30b0\u30e9\u30e0\u30ab\u30a6\u30f3\u30bf) \u306e\u5024\u306b\u8db3\u3057\u3001\u30c7\u30b9\u30c6\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30ec\u30b8\u30b9\u30bf\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\u5f8c\u8ff0\u3059\u308bJALR\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u4efb\u610f\u306e32bit\u76f8\u5bfe\u30a2\u30c9\u30ec\u30b9\u3078\u306e\u30b8\u30e3\u30f3\u30d7\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002</p> \u30ed\u30fc\u30c9\u547d\u4ee4\u3068\u30b9\u30c8\u30a2\u547d\u4ee4\u3002 <p>\u30ed\u30fc\u30c9\u547d\u4ee4\u3068\u30b9\u30c8\u30a2\u547d\u4ee4\u306f\u3001\u30e1\u30e2\u30ea\u306e<code>rs1+imm</code>\u3067\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30c9\u30ec\u30b9\u306b\u5bfe\u3057\u3066\u30ed\u30fc\u30c9\u3084\u30b9\u30c8\u30a2\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u30011\u30d0\u30a4\u30c8\u30842\u30d0\u30a4\u30c8\u30014\u30d0\u30a4\u30c8\u3068\u53d6\u308a\u6271\u3046\u30c7\u30fc\u30bf\u306e\u5358\u4f4d\u304c\u7570\u306a\u308b\u8907\u6570\u306e\u547d\u4ee4\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30ed\u30fc\u30c9\u547d\u4ee4\u306b\u3064\u3044\u3066\u306f\u30ed\u30fc\u30c9\u3057\u3066\u304d\u305f\u30c7\u30fc\u30bf\u306e\u53d6\u308a\u6271\u3044\u3068\u3057\u3066\u3001\u7b26\u53f7\u62e1\u5f35\u3068\u30bc\u30ed\u62e1\u5f35 (\u5de6\u5074\u30920\u3067\u57cb\u3081\u308b) \u306e2\u7a2e\u985e\u304c\u5b58\u5728\u3057\u307e\u3059\u3002</p> \u6761\u4ef6\u5206\u5c90\u547d\u4ee4\u3068\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4\u3002 <p>\u6761\u4ef6\u5206\u5c90\u547d\u4ee4\u306f\u3001\u5024\u306e\u6bd4\u8f03\u306e\u7d50\u679c\u3092\u5143\u306b\u5206\u5c90\u3092\u304a\u3053\u306a\u3046\u547d\u4ee4\u3067\u3059\u3002\u5206\u5c90\u3059\u308b\u5834\u5408\u306e\u5206\u5c90\u5148\u30a2\u30c9\u30ec\u30b9\u306f<code>pc+imm</code>\u306b\u306a\u308a\u307e\u3059\u3002\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4\u3067\u306f\u3001JAL\u306e\u5834\u5408<code>pc+imm</code>\u3001JALR\u306e\u5834\u5408<code>pc+rs1</code>\u3068\u3044\u3046\u30a2\u30c9\u30ec\u30b9\u306b\u3001\u305d\u308c\u305e\u308c\u30b8\u30e3\u30f3\u30d7\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u30c7\u30b9\u30c6\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30a2\u30c9\u30ec\u30b9\u306b\u306f\u3001<code>pc+4</code>\u3068\u3044\u3046\u5024\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002</p> <p>Open Question: RISC-V ISA\u306b\u304a\u3051\u308b\u5373\u5024\u306e\u9806\u756a\u306f\u3069\u3046\u3057\u3066\u3053\u3093\u306a\u306b\u30d0\u30e9\u30d0\u30e9\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b?</p> <p>\u306a\u304a\u3001RV32I\u306b\u306f\u4ed6\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u547d\u4ee4\u304c\u5b58\u5728\u3057\u307e\u3059\u3002</p> <ul> <li>FENCE<ul> <li>\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3001\u30de\u30eb\u30c1\u30b3\u30a2\u74b0\u5883\u3001\u3042\u308b\u3044\u306f\u5916\u90e8\u30c7\u30d0\u30a4\u30b9\u306a\u3069\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306b\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u9806\u5e8f\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u547d\u4ee4</li> </ul> </li> <li>ECALL/EBREAK<ul> <li>\u4f8b\u5916\u3092\u767a\u751f\u3055\u305bOS\u3084\u30c7\u30d0\u30c3\u30ac\u3078\u5236\u5fa1\u3092\u5f15\u304d\u6e21\u3059\u305f\u3081\u306e\u547d\u4ee4</li> </ul> </li> </ul> <p>\u3053\u308c\u3089\u306f\u30d7\u30ed\u30bb\u30c3\u30b5\u5358\u4f53\u3092\u30d9\u30a2\u30e1\u30bf\u30eb\u74b0\u5883 (OS\u306a\u3069\u304c\u7121\u3044\u74b0\u5883) \u3067\u52d5\u4f5c\u3055\u305b\u308b\u969b\u306b\u306f\u8003\u616e\u306e\u5fc5\u8981\u304c\u7121\u3044\u305f\u3081\u4eca\u56de\u306f\u89e6\u308c\u307e\u305b\u3093\u304c\u3001ISA\u306e\u3001\u30b7\u30b9\u30c6\u30e0\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3068\u306e\u754c\u9762\u3068\u3044\u3046\u5f79\u5272\u3092\u8003\u3048\u308b\u4e0a\u3067\u306f\u975e\u5e38\u306b\u91cd\u8981\u306a\u547d\u4ee4\u3067\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u3001\u3053\u308c\u3089\u3084Zicsr\u62e1\u5f35\u547d\u4ee4\u306b\u3064\u3044\u3066\u305d\u306e\u8a73\u7d30\u3092\u77e5\u3063\u3066\u304a\u304f\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002</p> <p>\u307e\u305f\u3001RISV-V\u306e\u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u306f1\u500b\u306e\u30bc\u30ed\u30ec\u30b8\u30b9\u30bf (\u5e38\u306b0\u306e\u5024\u3092\u3068\u308b\u30ec\u30b8\u30b9\u30bf) \u306831\u500b\u306e\u6c4e\u7528\u30ec\u30b8\u30b9\u30bf\u306b\u3088\u308a\u69cb\u6210\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u5404\u30ec\u30b8\u30b9\u30bf\u306e\u5f79\u5272\u306fRISC-V\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30a4\u30ca\u30ea\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9 (ABI) \u898f\u7d04\u306e\u4e2d\u3067\u5b9a\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p> \u5404\u30ec\u30b8\u30b9\u30bf\u306e\u5f79\u5272\u3002 <p>\u898f\u7d04\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u524d\u8ff0\u3057\u305f\u516c\u5f0f\u30b5\u30a4\u30c8\u3067\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3061\u3089\u306b\u3064\u3044\u3066\u3082\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4ee5\u4e0a\u306e\u30ec\u30a4\u30e4\u3068\u306e\u95a2\u4fc2\u304c\u77e5\u308a\u305f\u3044\u65b9\u306f\u305c\u3072\u78ba\u8a8d\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p> <p>DEC Alpha</p> <p>DEC Alpha ISA\u306f1990\u5e74\u4ee3\u306bDigital Equipment Corporation\uff08DEC\uff09 \u304c\u958b\u767a\u3057\u305fRISC ISA\u3067\u3059\u3002\u5148\u884c\u3059\u308b\u547d\u4ee4\u30bb\u30c3\u30c8\u3067\u3042\u308bVAX\u3068\u6bd4\u8f03\u3057\u3066RISC\u306e\u7279\u5fb4\u3092\u6570\u591a\u304f\u5c0e\u5165\u3057\u3001\u9ad8\u6027\u80fd\u5316\u3092\u8ffd\u53ca\u3057\u307e\u3057\u305f\u3002\u30b7\u30f3\u30d7\u30eb\u306a\u56fa\u5b9a\u9577\u547d\u4ee4\u3001\u8c4a\u5bcc\u306a\u30ec\u30b8\u30b9\u30bf\u3001\u30ed\u30fc\u30c9\u30b9\u30c8\u30a2\u578b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u3044\u3063\u305f\u8a2d\u8a08\u601d\u60f3\u306f\u3001\u8fd1\u5e74\u306eRISC-V\u306b\u3082\u901a\u3058\u308b\u3082\u306e\u3067\u3042\u308a\u3001ISA\u306e\u7c21\u7d20\u3055\u304c\u9ad8\u52b9\u7387\u306a\u5b9f\u88c5\u306b\u3064\u306a\u304c\u308b\u3068\u3044\u3046\u7406\u5ff5\u306f\u3001\u5f53\u6642\u3059\u3067\u306b\u660e\u78ba\u306b\u73fe\u308c\u3066\u3044\u307e\u3057\u305f\u3002Alpha ISA\u306b\u57fa\u3065\u304f\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u3067\u3042\u308b21164\u308421264\u306f\u3001\u6d17\u7df4\u3055\u308c\u305f\u30de\u30a4\u30af\u30ed\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u57fa\u3065\u3044\u3066\u3001\u975e\u5e38\u306a\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u30b3\u30b9\u30c8\u3092\u3064\u304e\u8fbc\u3093\u3067\u56de\u8def\u3084\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u6700\u9069\u5316\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u4e00\u7aef\u306f\u3001\u305f\u3068\u3048\u3070\u3001\"High-Performance Microprocessor Design,\" JSSC1998.\u3067\u8aac\u660e\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306a\u30d1\u30b9\u306e\u624b\u4f5c\u696d\u306b\u3088\u308b\u56de\u8def\u30fb\u914d\u7dda\u8abf\u6574\u3084\u3001\u96fb\u6e90\u306e\u30ab\u30b9\u30bf\u30e0\u8a2d\u8a08\u306b\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u30ab\u30b9\u30bf\u30e0\u8a2d\u8a08\u306b\u3088\u308b\u6069\u6075\u306f\u30010.35\u03bcm CMOS\u30d7\u30ed\u30bb\u30b9\u306b\u304a\u3044\u3066\u3001\u6700\u5927\u52d5\u4f5c\u5468\u6ce2\u6570\u304c600MHz\u3068\u3044\u3046\u5024\u304b\u3089\u5b9a\u91cf\u7684\u306b\u7aba\u3044\u77e5\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4eca\u5f8c\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u898f\u6a21\u306e\u30c7\u30a3\u30b8\u30bf\u30eb\u56de\u8def\u3092\u8ad6\u7406\u5408\u6210\u3067\u8a2d\u8a08\u3059\u308b\u969b\u3001\u3053\u306e\u5024\u3092\u601d\u3044\u51fa\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\u73fe\u72b6\u306e\u5148\u7aef\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u5927\u90e8\u5206\u306f\u3001\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u306e\u8ad6\u7406\u5408\u6210\u3084\u914d\u7f6e\u914d\u7dda\u306b\u3088\u3063\u3066\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30d5\u30ed\u30a2\u30d7\u30e9\u30f3\u3084\u96fb\u6e90\u8a2d\u8a08\u306b\u3064\u3044\u3066\u3001\u3042\u308b\u3044\u306f\u3001\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3068\u306a\u308b\u3088\u3046\u306a\u7279\u5b9a\u306e\u500b\u5225\u56de\u8def\u306b\u3064\u3044\u3066\u3001\u5c40\u6240\u7684\u306b\u306f\u624b\u306e\u304b\u304b\u3063\u305f\u6700\u9069\u5316\u304c\u304a\u3053\u306a\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u3001\u56de\u8def\u8a2d\u8a08\u3068\u30d7\u30ed\u30bb\u30b9\u8a2d\u8a08\u3068\u306e\u5206\u696d\u304c\u9032\u3093\u3060\u3053\u3068\u3001\u307e\u305f\u3001\u8a2d\u8a08\u306b\u304a\u3051\u308b\u4e3b\u8981\u306a\u76ee\u6a19\u304c\u6d88\u8cbb\u30a8\u30cd\u30eb\u30ae\u30fc\u3084\u71b1\u5bc6\u5ea6\u306e\u4f4e\u6e1b\u3078\u3068\u79fb\u3063\u3066\u304d\u305f\u3053\u3068\u3082\u3042\u308a\u3001Alpha\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u7fa4\u3092\u601d\u308f\u305b\u308b\u7a2e\u985e\u306e\u6700\u9069\u5316\u306f\u5b9f\u65bd\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u60f3\u50cf\u3057\u307e\u3059\u3002</p>"},{"location":"week2/#1","title":"\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u8a2d\u8a08 (1)","text":""},{"location":"week2/#_3","title":"\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u5168\u4f53\u69cb\u6210","text":"<p>\u672c\u8b1b\u7fa9\u3067\u306f\u307e\u305a\u3001\u30b7\u30f3\u30b0\u30eb\u30b5\u30a4\u30af\u30eb\u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u60f3\u5b9a\u3057\u3066\u5404\u7a2e\u6a5f\u80fd\u30d6\u30ed\u30c3\u30af\u306e\u8a2d\u8a08\u3092\u9032\u3081\u3001\u3084\u304c\u3066\u5168\u4f53\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5316\u3084\u30de\u30a4\u30af\u30ed\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6700\u9069\u5316\u306b\u53d6\u308a\u7d44\u3093\u3067\u3044\u304d\u307e\u3059\u3002</p> \u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u5168\u4f53\u56f3\u3002 <p>\u5177\u4f53\u7684\u306b\u306f\u3001\u4e0a\u56f3\u306b\u793a\u3059\u3088\u3046\u306a\u69cb\u6210\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u8a2d\u8a08\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u5168\u4f53\u3092\u773a\u3081\u308b\u3068\u914d\u7dda\u304c\u8907\u96d1\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u500b\u5225\u306b\u52d5\u4f5c\u3092\u898b\u3066\u3044\u304f\u3068\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3002\u6700\u521d\u306f\u3001\u8a73\u7d30\u306a\u30af\u30ed\u30c3\u30af\u99c6\u52d5\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306a\u3069\u3092\u8003\u616e\u305b\u305a\u3001\u30d7\u30ed\u30bb\u30c3\u30b5\u5168\u4f53\u306e\u52d5\u4f5c\u306e\u6d41\u308c\u3084\u5404\u6a5f\u80fd\u30d6\u30ed\u30c3\u30af\u306e\u50cd\u304d\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002</p> \u30d7\u30ed\u30b0\u30e9\u30e0\u30ab\u30a6\u30f3\u30bf\u306b\u3088\u308b\u30a2\u30c9\u30ec\u30b9\u6307\u5b9a\u3002 <p>\u307e\u305a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30ab\u30a6\u30f3\u30bf (PC) \u306b\u3088\u308b\u30d5\u30a7\u30c3\u30c1\u30a2\u30c9\u30ec\u30b9\u306e\u6307\u5b9a\u3067\u3059\u3002PC\u306f\u6b21\u306b\u5b9f\u884c\u3059\u308b\u547d\u4ee4\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\u30af\u30ed\u30c3\u30af\u6bce\u306b\u6b21\u306b\u5b9f\u884c\u3059\u308b\u30a2\u30c9\u30ec\u30b9\u3078\u3068\u51fa\u529b\u3092\u66f4\u65b0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u6761\u4ef6\u5206\u5c90\u547d\u4ee4\u3084\u30b8\u30e3\u30f3\u30d7\u547d\u4ee4\u306e\u7121\u3044\u5834\u5408\u306b\u306f\u3001\u5206\u5c90\u30d5\u30e9\u30b0 (<code>br_taken</code>) \u304c\u7acb\u305f\u305a\u3001<code>pc</code>\u306b4\u3092\u8db3\u3057\u305f\u3082\u306e\u304c\u6b21\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\u5206\u5c90\u304c\u5b9f\u884c\u3055\u308c\u308b\u969b\u306b\u306f\u3001<code>br_taken</code>\u304c\u7acb\u3061\u3001\u5206\u5c90\u5148\u30a2\u30c9\u30ec\u30b9<code>br_addr</code>\u306e\u5024\u304c\u6b21\u306e\u30a2\u30c9\u30ec\u30b9\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e<code>br_addr</code>\u306b\u3064\u3044\u3066\u306f\u5f8c\u306e\u30b9\u30c6\u30fc\u30b8\u3067\u8a08\u7b97\u3055\u308c\u305f\u3082\u306e\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> \u547d\u4ee4\u30e1\u30e2\u30ea\u304b\u3089\u306e\u30d5\u30a7\u30c3\u30c1\u3002 <p>\u6b21\u306b\u3001\u547d\u4ee4\u30e1\u30e2\u30ea\u304b\u3089\u306e\u30d5\u30a7\u30c3\u30c1\u3067\u3059\u3002PC\u306e\u6307\u3059\u30a2\u30c9\u30ec\u30b9<code>pc</code>\u306b\u683c\u7d0d\u3055\u308c\u305f32bit\u306e\u547d\u4ee4\u5217<code>insn</code>\u304c\u8aad\u307f\u51fa\u3055\u308c\u3001\u5f8c\u6bb5\u306e\u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u3084\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u3078\u3068\u5165\u529b\u3055\u308c\u307e\u3059\u3002</p> \u547d\u4ee4\u306e\u30c7\u30b3\u30fc\u30c9\u3002 <p>\u305d\u306e\u5f8c\u3001\u547d\u4ee4\u5217<code>insn</code>\u306f\u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u3068\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u3078\u3068\u5165\u529b\u3055\u308c\u307e\u3059\u3002\u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u547d\u4ee4\u5217\u306e\u6307\u5b9a\u3059\u308b\u30c7\u30b9\u30c6\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30ec\u30b8\u30b9\u30bf\u756a\u53f7<code>rd</code>\u3084\u30bd\u30fc\u30b9\u30ec\u30b8\u30b9\u30bf\u756a\u53f7<code>rs1</code>\u3001<code>rs2</code>\u304c\u5165\u529b\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u5024\u3068\u3057\u3066\u3001<code>rs1_val</code>\u3084<code>rs2_val</code>\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306f\u3001<code>insn</code>\u3092\u5165\u529b\u3068\u3057\u3066</p> <ul> <li>\u7b26\u53f7\u62e1\u5f35\u3057\u305f\u5373\u5024: <code>imm[31:0]</code></li> <li>ALU\u306e\u6f14\u7b97\u5185\u5bb9\u9078\u629e\u4fe1\u53f7: <code>alu_code</code></li> <li>ALU\u3078\u306e\u5165\u529b\u9078\u629e\u4fe1\u53f7: <code>alu_op1_sel</code>, <code>alu_op2_sel</code></li> </ul> <p>\u3068\u3044\u3063\u305f\u3082\u306e\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066ALU\u3067\u6240\u671b\u306e\u6f14\u7b97\u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p>\u307e\u305f\u3001</p> <ul> <li>\u30b9\u30c8\u30a2\u547d\u4ee4\u30d5\u30e9\u30b0: <code>is_store</code></li> <li>\u30ed\u30fc\u30c9\u547d\u4ee4\u30d5\u30e9\u30b0: <code>is_load</code></li> </ul> <p>\u306b\u3088\u3063\u3066\u3001\u30c7\u30fc\u30bf\u30e1\u30e2\u30ea\u3078\u306e\u66f8\u304d\u8fbc\u307f\u306e\u6709\u7121\u3084\u30c7\u30fc\u30bf\u30e1\u30e2\u30ea\u304b\u3089\u306e\u8aad\u307f\u51fa\u3057\u306e\u6709\u7121\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002</p> ALU\u306b\u3088\u308b\u6f14\u7b97\u5b9f\u884c\u3002 <p>\u3053\u308c\u3092\u53d7\u3051\u3066\u3001ALU\u3092\u7528\u3044\u3066\u6f14\u7b97\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002<code>rs1_val</code>\u3084<code>rs2_val</code>\u3001<code>imm</code>\u3068\u3044\u3063\u305f\u4fe1\u53f7\u304b\u3089\u3001\u547d\u4ee4\u306b\u5fdc\u3058\u3066\u751f\u6210\u3055\u308c\u305f<code>alu_op1_sel</code>\u3084<code>alu_op2_sel</code>\u306b\u3088\u3063\u3066\u9078\u629e\u3055\u308c\u305f\u3082\u306e\u304cALU\u3078\u3068\u5165\u529b\u3055\u308c\u307e\u3059\u3002\u6f14\u7b97\u306e\u7a2e\u5225\u3082<code>alu_code</code>\u3067\u9069\u5207\u306a\u3082\u306e\u304c\u9078\u629e\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001ALU\u306f\u5206\u5c90\u306e\u6709\u7121<code>br_taken</code>\u306b\u3064\u3044\u3066\u3082\u5224\u5b9a\u3057\u307e\u3059\u3002\u4e26\u884c\u3057\u3066\u3001\u5206\u5c90\u5148\u306e\u30a2\u30c9\u30ec\u30b9<code>br_addr</code>\u3082\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002</p> \u30c7\u30fc\u30bf\u30e1\u30e2\u30ea\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3002 <p>\u305d\u308c\u304b\u3089\u3001\u30c7\u30fc\u30bf\u30e1\u30e2\u30ea\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u304a\u3053\u306a\u308f\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001ALU\u306b\u3088\u3063\u3066\u8a08\u7b97\u3055\u308c\u305f\u30a2\u30c9\u30ec\u30b9\u306b\u5fdc\u3058\u3066\u3001\u30ed\u30fc\u30c9\u3084\u30b9\u30c8\u30a2\u304c\u304a\u3053\u306a\u308f\u308c\u307e\u3059\u3002\u30b9\u30c8\u30a2\u547d\u4ee4\u30d5\u30e9\u30b0<code>is_store</code>\u304c\u7acb\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u3053\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u30c7\u30fc\u30bf<code>rs2_val</code>\u304c\u66f8\u304d\u8fbc\u307e\u308c\u307e\u3059\u3002</p> \u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u66f8\u304d\u623b\u3057\u3002 <p>\u6700\u5f8c\u306b\u3001\u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u66f8\u304d\u623b\u3057\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u30ed\u30fc\u30c9\u547d\u4ee4\u30d5\u30e9\u30b0<code>is_load</code>\u304c\u7acb\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u30c7\u30fc\u30bf\u30e1\u30e2\u30ea\u304b\u3089\u30ed\u30fc\u30c9\u3057\u3066\u304d\u305f\u5024\u304c\u3001\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306fALU\u306e\u8a08\u7b97\u7d50\u679c<code>alu_result</code>\u304c\u3001\u66f8\u304d\u8fbc\u307e\u308c\u307e\u3059\u3002</p> <p>\u3053\u306e\u3088\u3046\u306b\u3001\u500b\u5225\u306e\u30b9\u30c6\u30fc\u30b8\u6bce\u306b\u898b\u3066\u307f\u308b\u3068\u3001\u30d7\u30ed\u30bb\u30c3\u30b5\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u4ecaPC\u4ee5\u964d\u306b\u898b\u3066\u304d\u305f\u51e6\u7406\u306e\u30b9\u30c6\u30fc\u30b8\u306f\u3001\u5178\u578b\u7684\u306a5\u30b9\u30c6\u30fc\u30b8\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u69cb\u6210\u306b\u304a\u3051\u308b\u305d\u308c\u3068\u6982\u306d\u4e00\u81f4\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"week2/#alu","title":"ALU\u306e\u8a2d\u8a08","text":"<p>\u5177\u4f53\u7684\u306b\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u5404\u6a5f\u80fd\u30d6\u30ed\u30c3\u30af\u306e\u8a2d\u8a08\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u6700\u521d\u306f\u3001ALU\u3067\u3059\u3002ALU (Arithmetic Logic Unit) \u3067\u306f\u3001RISC-V ISA\u306b\u304a\u3051\u308b\u52a0\u6e1b\u7b97\u3001\u8ad6\u7406\u6f14\u7b97\u3001\u6bd4\u8f03\u3001\u30b7\u30d5\u30c8\u3068\u3044\u3063\u305f\u6f14\u7b97\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u30c7\u30b3\u30fc\u30c0\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u5236\u5fa1\u4fe1\u53f7\u306b\u5fdc\u3058\u305f\u6f14\u7b97\u3092\u30012\u3064\u306e\u5165\u529b\u4fe1\u53f7\u306b\u5bfe\u3057\u3066\u3001\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <p>\u6f14\u7fd2: ALU\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u4fee\u6b63\u3057\u3066\u3001ALU\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002 <pre><code>`include \"cpu_pkg.sv\"\n\nmodule alu (\n    input logic [4:0] alu_code,\n    input logic [31:0] op1,\n    input logic [31:0] op2,\n    output logic [31:0] alu_result,\n    output logic br_taken\n);\n\n    import cpu_pkg::*;\n\n    // \u7b26\u53f7\u4ed8\u304d\u6f14\u7b97\u7528\n    logic signed [31:0] signed_op1, signed_op2;\n\n    assign signed_op1 = signed'(op1);\n    assign signed_op2 = signed'(op2);\n\n    // \u6f14\u7b97\n    always_comb begin\n        unique case (alu_code)\n            ALU_ADD: alu_result = ;\n            ALU_SUB: alu_result = ;\n            ALU_XOR: alu_result = ;\n            ALU_OR: alu_result = ;\n            ALU_AND: alu_result = ;\n            ALU_SLT: alu_result = ;\n            ALU_SLTU: alu_result = ;\n            ALU_SLL: alu_result = ;\n            ALU_SRL: alu_result = ;\n            ALU_SRA: alu_result = ;\n            ALU_LUI: alu_result = op2;\n            ALU_JAL: alu_result = op2 + 32'd4;\n            default: alu_result = 32'd0;\n        endcase\n    end\n\n    // \u5206\u5c90\u5224\u5b9a\n    always_comb begin\n        unique case (alu_code)\n            ALU_BEQ: br_taken = ;\n            ALU_BNE: br_taken = ;\n            ALU_BLT: br_taken = ;\n            ALU_BGE: br_taken = ;\n            ALU_BLTU: br_taken = ;\n            ALU_BGEU: br_taken = ;\n            ALU_JAL: br_taken = ENABLE;\n            default: br_taken = DISABLE;\n        endcase\n    end\n\nendmodule\n</code></pre> \u306a\u304a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f75\u305b\u3066\u4f5c\u6210\u3057\u3066\u304a\u304f\u3068include\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002 cpu_pkg.sv<pre><code>`ifndef CPU_PKG_SV\n`define CPU_PKG_SV\n\npackage cpu_pkg;\n\n    // alu_code\n    parameter logic [4:0] ALU_ADD  = 5'd0;\n    parameter logic [4:0] ALU_SUB  = 5'd1;\n    parameter logic [4:0] ALU_XOR  = 5'd2;\n    parameter logic [4:0] ALU_OR   = 5'd3;\n    parameter logic [4:0] ALU_AND  = 5'd4;\n    parameter logic [4:0] ALU_SLT  = 5'd5;\n    parameter logic [4:0] ALU_SLTU = 5'd6;\n    parameter logic [4:0] ALU_SLL  = 5'd7;\n    parameter logic [4:0] ALU_SRL  = 5'd8;\n    parameter logic [4:0] ALU_SRA  = 5'd9;\n    parameter logic [4:0] ALU_LUI  = 5'd10;\n    parameter logic [4:0] ALU_BEQ  = 5'd11;\n    parameter logic [4:0] ALU_BNE  = 5'd12;\n    parameter logic [4:0] ALU_BLT  = 5'd13;\n    parameter logic [4:0] ALU_BGE  = 5'd14;\n    parameter logic [4:0] ALU_BLTU = 5'd15;\n    parameter logic [4:0] ALU_BGEU = 5'd16;\n    parameter logic [4:0] ALU_JAL  = 5'd17;\n\nendpackage\n\n`endif\n</code></pre></p> <p>\u307e\u305f\u3001\u8a2d\u8a08\u3057\u305fALU\u306b\u3064\u3044\u3066\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u52d5\u4f5c\u3092\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <p>\u6f14\u7fd2: ALU\u306e\u691c\u8a3c</p> <p>\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u3092\u4f5c\u6210\u3057\u3066\u3001ALU\u3092\u691c\u8a3c\u3057\u307e\u3057\u3087\u3046\u3002 assert\u3092\u4f7f\u3046\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p> <p>RISC-V ISA\u306b\u57fa\u3065\u304f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5</p> <p>RISC-V ISA\u306f\u30aa\u30fc\u30d7\u30f3\u306b\u516c\u958b\u3055\u308c\u305f\u4ed5\u69d8\u3067\u3042\u308a\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u30d5\u30ea\u30fc\u3067\u4f7f\u7528\u3067\u304d\u308b\u305f\u3081\u3001\u305d\u308c\u306b\u57fa\u3065\u3044\u3066\u5b9f\u88c5\u3055\u308c\u305f\u30d7\u30ed\u30bb\u30c3\u30b5\u306f\u3001\u81ea\u7531\u306b\u8a2d\u8a08\u30fb\u516c\u958b\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3068\u3057\u3066\u3001\u975e\u55b6\u5229\u56e3\u4f53\u3067\u3042\u308bOpenHW Group\u3084\u3001ETH Z\u00fcrich\u3084University of Bologna\u306e\u30c1\u30fc\u30e0\u304c\u4e2d\u5fc3\u3068\u306a\u3063\u305fPULP Platform\u306a\u3069\u304b\u3089\u591a\u69d8\u306a\u30d7\u30ed\u30bb\u30c3\u30b5\u306eRTL\u8a2d\u8a08\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3001\u3053\u3061\u3089\u3067\u306f\u5b9f\u969b\u306b\u88fd\u9020\u3055\u308c\u305f\u30d7\u30ed\u30bb\u30c3\u30b5\u30c1\u30c3\u30d7\u306b\u3064\u3044\u3066\u306e\u60c5\u5831\u3082\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"week2/#_4","title":"\u6b21\u56de\u4e88\u544a","text":"<p>\u672c\u65e5\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\u6b21\u56de\u306f\u3001\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u8a2d\u8a08\u306e\u7d9a\u304d\u3092\u304a\u3053\u306a\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u30de\u30a4\u30af\u30ed\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3064\u3044\u3066\u4e88\u7fd2\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"week3/","title":"\u7b2c3\u56de \u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u8a2d\u8a082","text":"<p>\u672c\u65e5\u306e\u8b1b\u7fa9\u5185\u5bb9</p> <ul> <li>\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u8a2d\u8a08 (2)</li> <li>Design Compiler\u3092\u7528\u3044\u305f\u8ad6\u7406\u5408\u6210</li> </ul>"},{"location":"week3/#2","title":"\u6c4e\u7528\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u8a2d\u8a08 (2)","text":""},{"location":"week3/#alu","title":"ALU\u306e\u8a2d\u8a08\u306e\u7d9a\u304d","text":"\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u5168\u4f53\u56f3\u3002 ALU\u3002 <p>ALU\u306e\u8a2d\u8a08\u3092\u7d9a\u3051\u3066\u3044\u304d\u307e\u3059\u3002ALU\u3067\u306f\u3001\u52a0\u6e1b\u7b97\u3001\u8ad6\u7406\u6f14\u7b97\u3001\u6bd4\u8f03\u3001\u30b7\u30d5\u30c8\u305d\u306e\u4ed6\u306e\u6f14\u7b97\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u5236\u5fa1\u4fe1\u53f7<code>alu_code[4:0]</code>\u306b\u5fdc\u3058\u305f\u6f14\u7b97\u3092\u30012\u3064\u306e\u5165\u529b\u4fe1\u53f7<code>op1</code>\u3001<code>op2</code>\u306b\u5bfe\u3057\u3066\u3001\u5b9f\u884c\u3059\u308b\u306e\u3067\u3057\u305f\u3002\u547d\u4ee4\u306b\u5fdc\u3058\u305f\u6f14\u7b97\u7d50\u679c<code>alu_result[31:0]</code>\u3092\u51fa\u529b\u3059\u308b\u3068\u3068\u3082\u306b\u3001\u5206\u5c90\u306e\u6709\u7121\u306b\u3064\u3044\u3066\u3082\u5224\u5b9a\u3057<code>br_taken</code>\u3068\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002</p> <p>\u6f14\u7fd2: ALU\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u4fee\u6b63\u3057\u3066\u3001ALU\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002 <pre><code>module alu (\n    input logic [4:0] alu_code,\n    input logic [31:0] op1,\n    input logic [31:0] op2,\n    output logic [31:0] alu_result,\n    output logic br_taken\n);\n\n    import cpu_pkg::*;\n\n    always_comb begin\n        unique case (alu_code)\n            ALU_ADD: alu_result = ;\n            ALU_SUB: alu_result = ;\n            ALU_XOR: alu_result = ;\n            ALU_OR: alu_result = ;\n            ALU_AND: alu_result = ;\n            ALU_SLT: alu_result = ;\n            ALU_SLTU: alu_result = ;\n            ALU_SLL: alu_result = ;\n            ALU_SRL: alu_result = ;\n            ALU_SRA: alu_result = ;\n            ALU_LUI: alu_result = op2;\n            ALU_JAL, ALU_JALR: alu_result = op1 + 32'd4;\n            default: alu_result = 32'd0;\n        endcase\n    end\n\n    always_comb begin\n        unique case (alu_code)\n            ALU_BEQ: br_taken = ;\n            ALU_BNE: br_taken = ;\n            ALU_BLT: br_taken = ;\n            ALU_BGE: br_taken = ;\n            ALU_BLTU: br_taken = ;\n            ALU_BGEU: br_taken = ;\n            ALU_JAL, ALU_JALR: br_taken = ENABLE;\n            default: br_taken = DISABLE;\n        endcase\n    end\n\nendmodule\n</code></pre> \u306a\u304a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5225\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4f75\u305b\u3066\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002 cpu_pkg.sv<pre><code>package cpu_pkg;\n\n    // control signals\n    parameter logic ENABLE = 1'b1;\n    parameter logic DISABLE = 1'b0;\n\n    // alu_code\n    typedef logic [4:0] alu_code_t;\n\n    parameter alu_code_t ALU_ADD  = 5'd0;\n    parameter alu_code_t ALU_SUB  = 5'd1;\n    parameter alu_code_t ALU_XOR  = 5'd2;\n    parameter alu_code_t ALU_OR   = 5'd3;\n    parameter alu_code_t ALU_AND  = 5'd4;\n    parameter alu_code_t ALU_SLT  = 5'd5;\n    parameter alu_code_t ALU_SLTU = 5'd6;\n    parameter alu_code_t ALU_SLL  = 5'd7;\n    parameter alu_code_t ALU_SRL  = 5'd8;\n    parameter alu_code_t ALU_SRA  = 5'd9;\n    parameter alu_code_t ALU_LUI  = 5'd10;\n    parameter alu_code_t ALU_BEQ  = 5'd11;\n    parameter alu_code_t ALU_BNE  = 5'd12;\n    parameter alu_code_t ALU_BLT  = 5'd13;\n    parameter alu_code_t ALU_BGE  = 5'd14;\n    parameter alu_code_t ALU_BLTU = 5'd15;\n    parameter alu_code_t ALU_BGEU = 5'd16;\n    parameter alu_code_t ALU_JAL  = 5'd17;\n    parameter alu_code_t ALU_JALR = 5'd18;\n\nendpackage\n</code></pre></p> \u3053\u305f\u3048 <pre><code>module alu (\n    input logic [4:0] alu_code,\n    input logic [31:0] op1,\n    input logic [31:0] op2,\n    output logic [31:0] alu_result,\n    output logic br_taken\n);\n\n    import cpu_pkg::*;\n\n    always_comb begin\n        unique case (alu_code)\n            ALU_ADD: alu_result = op1 + op2;\n            ALU_SUB: alu_result = op1 - op2;\n            ALU_XOR: alu_result = op1 ^ op2;\n            ALU_OR: alu_result = op1 | op2;\n            ALU_AND: alu_result = op1 &amp; op2;\n            ALU_SLT: alu_result = (signed'(op1) &lt; signed'(op2)) ? 32'd1 : 32'd0;\n            ALU_SLTU: alu_result = (op1 &lt; op2) ? 32'd1 : 32'd0;\n            ALU_SLL: alu_result = op1 &lt;&lt; op2[4:0];\n            ALU_SRL: alu_result = op1 &gt;&gt; op2[4:0];\n            ALU_SRA: alu_result = signed'(op1) &gt;&gt;&gt; op2[4:0];\n            ALU_LUI: alu_result = op2;\n            ALU_JAL, ALU_JALR: alu_result = op1 + 32'd4;\n            default: alu_result = 32'd0;\n        endcase\n    end\n\n    always_comb begin\n        unique case (alu_code)\n            ALU_BEQ: br_taken = (op1 == op2);\n            ALU_BNE: br_taken = (op1 != op2);\n            ALU_BLT: br_taken = (signed'(op1) &lt; signed'(op2));\n            ALU_BGE: br_taken = (signed'(op1) &gt;= signed'(op2));\n            ALU_BLTU: br_taken = (op1 &lt; op2);\n            ALU_BGEU: br_taken = (op1 &gt;= op2);\n            ALU_JAL, ALU_JALR: br_taken = ENABLE;\n            default: br_taken = DISABLE; \n        endcase\n    end\n\nendmodule\n</code></pre> <p>\u6f14\u7fd2: ALU\u306e\u691c\u8a3c</p> <p>\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u3092\u4f5c\u6210\u3057\u3066\u3001ALU\u3092\u691c\u8a3c\u3057\u307e\u3057\u3087\u3046\u3002 assert\u3092\u4f7f\u3046\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p> \u3053\u305f\u3048 <p>\u4ee5\u4e0b\u306e<code>alu_tb.sv</code>\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u3001 <pre><code>$ xrun alu_tb.sv alu.sv cpu_pkg.sv\n</code></pre> alu_tb.sv<pre><code>`timescale 1ns/1ps\n\nmodule alu_tb;\n\n    import cpu_pkg::*;\n\n    logic [4:0] alu_code;\n    logic [31:0] op1, op2;\n    logic [31:0] alu_result;\n    logic br_taken;\n\n    alu dut (\n        .alu_code(alu_code),\n        .op1(op1),\n        .op2(op2),\n        .alu_result(alu_result),\n        .br_taken(br_taken)\n    );\n\n    initial begin\n        // ---- ALU_ADD ----\n        alu_code = ALU_ADD; op1 = 10; op2 = 20;\n        #1;\n        assert (alu_result == 32'd30) else $fatal(\"ADD failed\");\n\n        // ---- ALU_SUB ----\n        alu_code = ALU_SUB; op1 = 50; op2 = 20;\n        #1;\n        assert (alu_result == 32'd30) else $fatal(\"SUB failed\");\n\n        // ---- ALU_XOR ----\n        alu_code = ALU_XOR; op1 = 32'hF0F0F0F0; op2 = 32'h0F0F0F0F;\n        #1;\n        assert (alu_result == 32'hFFFFFFFF) else $fatal(\"XOR failed\");\n\n        // ---- ALU_OR ----\n        alu_code = ALU_OR; op1 = 32'hF0000000; op2 = 32'h0000F000;\n        #1;\n        assert (alu_result == 32'hF000F000) else $fatal(\"OR failed\");\n\n        // ---- ALU_AND ----\n        alu_code = ALU_AND; op1 = 32'hFF00FF00; op2 = 32'h0F0F0F0F;\n        #1;\n        assert (alu_result == 32'h0F000F00) else $fatal(\"AND failed\");\n\n        // ---- ALU_SLT ---- (signed)\n        alu_code = ALU_SLT; op1 = -5; op2 = 3;\n        #1;\n        assert (alu_result == 32'd1) else $fatal(\"SLT failed\");\n\n        // ---- ALU_SLTU ---- (unsigned)\n        alu_code = ALU_SLTU; op1 = 32'hFFFFFFFF; op2 = 0;\n        #1;\n        assert (alu_result == 32'd0) else $fatal(\"SLTU failed\");\n\n        // ---- ALU_SLL ----\n        alu_code = ALU_SLL; op1 = 1; op2 = 4;\n        #1;\n        assert (alu_result == 32'd16) else $fatal(\"SLL failed\");\n\n        // ---- ALU_SRL ----\n        alu_code = ALU_SRL; op1 = 32'hF0000000; op2 = 4;\n        #1;\n        assert (alu_result == 32'h0F000000) else $fatal(\"SRL failed\");\n\n        // ---- ALU_SRA ----\n        alu_code = ALU_SRA; op1 = 32'hFFFFFFF0; op2 = 4;\n        #1;\n        assert (alu_result == 32'hFFFFFFFF) else $fatal(\"SRA failed\");\n\n        // ---- ALU_LUI ----\n        alu_code = ALU_LUI; op1 = 0; op2 = 32'h12345000;\n        #1;\n        assert (alu_result == 32'h12345000) else $fatal(\"LUI failed\");\n\n        // ---- ALU_BEQ ----\n        alu_code = ALU_BEQ; op1 = 42; op2 = 42;\n        #1;\n        assert (br_taken == 1'b1) else $fatal(\"BEQ failed\");\n\n        // ---- ALU_BNE ----\n        alu_code = ALU_BNE; op1 = 1; op2 = 2;\n        #1;\n        assert (br_taken == 1'b1) else $fatal(\"BNE failed\");\n\n        // ---- ALU_BLT ----\n        alu_code = ALU_BLT; op1 = -10; op2 = 0;\n        #1;\n        assert (br_taken == 1'b1) else $fatal(\"BLT failed\");\n\n        // ---- ALU_BGE ----\n        alu_code = ALU_BGE; op1 = 5; op2 = -5;\n        #1;\n        assert (br_taken == 1'b1) else $fatal(\"BGE failed\");\n\n        // ---- ALU_BLTU ----\n        alu_code = ALU_BLTU; op1 = 1; op2 = 2;\n        #1;\n        assert (br_taken == 1'b1) else $fatal(\"BLTU failed\");\n\n        // ---- ALU_BGEU ----\n        alu_code = ALU_BGEU; op1 = 5; op2 = 4;\n        #1;\n        assert (br_taken == 1'b1) else $fatal(\"BGEU failed\");\n\n        // ---- ALU_JAL ----\n        alu_code = ALU_JAL; op1 = 100; op2 = 0;\n        #1;\n        assert (alu_result == 32'd104) else $fatal(\"JAL result failed\");\n        assert (br_taken == 1'b1) else $fatal(\"JAL branch failed\");\n\n        $display(\"\u2705 All ALU tests passed!\");\n        $finish;\n    end\n\nendmodule\n</code></pre></p>"},{"location":"week3/#_1","title":"\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e\u8a2d\u8a08","text":"\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u3002 <p>\u7d9a\u3044\u3066\u3001\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e\u8a2d\u8a08\u3092\u304a\u3053\u306a\u3044\u307e\u3059\u3002\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u3067\u306f\u300132bit\u306e\u6a5f\u68b0\u8a9e\u547d\u4ee4\u5217<code>insn</code>\u3092\u5165\u529b\u3068\u3057\u3066</p> <ul> <li>\u7b26\u53f7\u62e1\u5f35\u3057\u305f\u5373\u5024: <code>imm[31:0]</code></li> <li>ALU\u306e\u6f14\u7b97\u5185\u5bb9\u9078\u629e\u4fe1\u53f7: <code>alu_code[4:0]</code></li> <li>ALU\u3078\u306e\u5165\u529b\u9078\u629e\u4fe1\u53f7: <code>alu_op1_sel</code>, <code>alu_op2_sel</code></li> <li>\u30ed\u30fc\u30c9\u547d\u4ee4\u30d5\u30e9\u30b0: <code>is_load[2:0]</code></li> <li>\u30b9\u30c8\u30a2\u547d\u4ee4\u30d5\u30e9\u30b0: <code>is_store[1:0]</code></li> </ul> <p>\u3068\u3044\u3063\u305f\u3082\u306e\u3092\u751f\u6210\u3059\u308b\u306e\u3067\u3057\u305f\u3002</p> RV32I\u547d\u4ee4\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002 <p>\u307e\u305a\u3001<code>imm[31:0]</code>\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u300237\u547d\u4ee4\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u898b\u3066\u307f\u308b\u3068\u3001\u5373\u5024\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li><code>insn[31:20]</code>\u3092<code>imm[11:0]</code>\u3068\u3057\u3066\u7b26\u53f7\u62e1\u5f35:<ul> <li>ADDI, XORI, ORI, ANDI, SLTI, SLTIU, SLLI, SRLI, SRAI, LB, LH, LW, LBU, LHU, JALR</li> </ul> </li> <li><code>insn[31:12]</code>\u3092<code>imm[31:12]</code>\u3068\u3057\u3066\u4e0b\u4f4d\u30920\u3067\u57cb\u3081\u308b:<ul> <li>LUI, AUIPC</li> </ul> </li> <li><code>{insn[31:25], insn[11:7]}</code>\u3092<code>imm[11:0]</code>\u3068\u3057\u3066\u7b26\u53f7\u62e1\u5f35:<ul> <li>SB, SH, SW</li> </ul> </li> <li><code>{insn[31], insn[7], insn[30:25], insn[11:8]}</code>\u3092<code>imm[12:1]</code>\u3068\u3057\u3066\u7b26\u53f7\u62e1\u5f35\u3001\u4e0b\u4f4d1bit\u306f0:<ul> <li>BEQ, BNE, BLT, BGE, BLTU, BGEU</li> </ul> </li> <li><code>{insn[31], insn[19:12], insn[20], insn[30:21]}</code>\u3092<code>imm[20:1]</code>\u3068\u3057\u3066\u7b26\u53f7\u62e1\u5f35\u3001\u4e0b\u4f4d1bit\u306f0:<ul> <li>JAL</li> </ul> </li> </ul> <p>\u3053\u3046\u3057\u305f\u95a2\u4fc2\u3092\u7528\u3044\u3066\u3001\u307e\u305a\u306f<code>imm[31:0]</code>\u3092\u7b97\u51fa\u3059\u308b\u7d44\u307f\u5408\u308f\u305b\u56de\u8def\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u547d\u4ee4\u306e\u4e0b\u4f4d7bit\u3092<code>op_code[6:0]</code>\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3001\u5224\u5225\u306e\u624b\u304c\u304b\u308a\u306b\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002</p> <p>\u6f14\u7fd2: \u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e\u5373\u5024\u7b97\u51fa\u90e8\u5206\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u4fee\u6b63\u3057\u3066\u3001\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e<code>imm[31:0]</code>\u7b97\u51fa\u90e8\u5206\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002 <pre><code>module decoder (\n    input logic [31:0] insn,\n    output logic [31:0] imm,\n    output logic [4:0] alu_code,\n    output logic alu_op1_sel,\n    output logic alu_op2_sel,\n    output logic reg_we,\n    output logic [2:0] is_load,\n    output logic [1:0] is_store\n);\n\n    logic [6:0] op_code;\n\n    assign op_code = insn[6:0];\n\n    always_comb begin\n        unique case (op_code)\n            OPIMM: imm = {{20{insn[31]}}, insn[31:20]};\n        endcase\n    end\n</code></pre> \u306a\u304a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5229\u7528\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002 <pre><code>// op_code\ntypedef logic [6:0] op_code_t;\n\nparameter op_code_t OPIMM  = 7'b0010011;\nparameter op_code_t OPREG  = 7'b0110011;\nparameter op_code_t LUI    = 7'b0110111;\nparameter op_code_t AUIPC  = 7'b0010111;\nparameter op_code_t LOAD   = 7'b0000011;\nparameter op_code_t STORE  = 7'b0100011;\nparameter op_code_t BRANCH = 7'b1100011;\nparameter op_code_t JAL    = 7'b1101111;\nparameter op_code_t JALR   = 7'b1100111;\n</code></pre></p> \u3053\u305f\u3048 <pre><code>module decoder (\n    input logic [31:0] insn,\n    output logic [31:0] imm,\n    output logic [4:0] alu_code,\n    output logic [1:0] alu_op1_sel,\n    output logic [1:0] alu_op2_sel,\n    output logic reg_we,\n    output logic [2:0] is_load,\n    output logic [1:0] is_store\n);\n\n    logic [6:0] op_code;\n\n    assign op_code = insn[6:0];\n\n    always_comb begin\n        unique case (op_code)\n            OPIMM, LOAD, JALR: imm = {{20{insn[31]}}, insn[31:20]};\n            LUI, AUIPC: imm = {insn[31:12], 12'd0};\n            STORE: imm = {{20{insn[31]}}, insn[31:25], insn[11:7]};\n            BRANCH: imm = {{19{insn[31]}}, insn[31], insn[7], insn[30:25], insn[11:8], 1'd0};\n            JAL: imm = {{11{insn[31]}}, insn[31], insn[19:12], insn[20], insn[30:21], 1'd0};\n            default: imm = 32'd0;\n        endcase\n    end\n</code></pre> <p>\u6b21\u306b\u3001<code>alu_code[4:0]</code>\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u547d\u4ee4\u6bce\u306bALU\u306b\u3069\u306e\u3088\u3046\u306a\u6f14\u7b97\u3092\u5b9f\u884c\u3055\u305b\u308b\u304b\u3001\u3068\u3044\u3046\u5236\u5fa1\u4fe1\u53f7\u3067\u3057\u305f\u3002\u540c\u69d8\u306b<code>op_code[6:0]</code>\u3092\u624b\u304c\u304b\u308a\u306b\u3057\u3064\u3064\u3001\u52a0\u3048\u3066\u3001<code>funct3[2:0]</code>\u3068\u3044\u3063\u305f\u4fe1\u53f7\u3092\u5b9a\u7fa9\u3057\u3066\u3053\u308c\u3092\u7528\u3044\u3066\u5206\u985e\u3059\u308b\u3068\u898b\u901a\u3057\u304c\u826f\u3044\u3067\u3059\u3002RV32I\u4ed5\u69d8\u3084\u3001\u5148\u9031\u306e\u30da\u30fc\u30b8\u3082\u53c2\u8003\u306b\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002</p> <p>\u6f14\u7fd2: \u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306eALU\u5236\u5fa1\u4fe1\u53f7\u7b97\u51fa\u90e8\u5206\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u4fee\u6b63\u3057\u3066\u3001\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e<code>alu_code[4:0]</code>\u7b97\u51fa\u90e8\u5206\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002 <pre><code>logic [6:0] op_code;\nlogic [2:0] funct3;\n\nassign op_code = insn[6:0];\nassign funct3 = insn[14:12];\n\nalways_comb begin\n    unique case (op_code)\n        OPREG: begin\n            unique case (funct3)\n                3'b000: alu_code = (insn[30] == 1'b1) ? ALU_SUB : ALU_ADD;\n            endcase\n        end\n        OPIMM: begin\n            unique case (funct3)\n                3'b000: alu_code = ALU_ADD;\n            endcase\n        end\n        LUI: alu_code = ALU_LUI;\n        AUIPC: alu_code = ALU_ADD;\n        BRANCH: begin\n            unique case (funct3)\n            endcase\n        end\n        JAL: alu_code = ALU_JAL;\n        JALR: alu_code = ALU_JALR;\n        default: alu_code = ALU_ADD;\n    endcase\nend\n</code></pre> \u306a\u304a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5229\u7528\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002 <pre><code>// op_code\ntypedef logic [6:0] op_code_t;\n\nparameter op_code_t OPIMM  = 7'b0010011;\nparameter op_code_t OPREG  = 7'b0110011;\nparameter op_code_t LUI    = 7'b0110111;\nparameter op_code_t AUIPC  = 7'b0010111;\nparameter op_code_t LOAD   = 7'b0000011;\nparameter op_code_t STORE  = 7'b0100011;\nparameter op_code_t BRANCH = 7'b1100011;\nparameter op_code_t JAL    = 7'b1101111;\nparameter op_code_t JALR   = 7'b1100111;\n\n// alu_code\ntypedef logic [4:0] alu_code_t;\n\nparameter alu_code_t ALU_ADD  = 5'd0;\nparameter alu_code_t ALU_SUB  = 5'd1;\nparameter alu_code_t ALU_XOR  = 5'd2;\nparameter alu_code_t ALU_OR   = 5'd3;\nparameter alu_code_t ALU_AND  = 5'd4;\nparameter alu_code_t ALU_SLT  = 5'd5;\nparameter alu_code_t ALU_SLTU = 5'd6;\nparameter alu_code_t ALU_SLL  = 5'd7;\nparameter alu_code_t ALU_SRL  = 5'd8;\nparameter alu_code_t ALU_SRA  = 5'd9;\nparameter alu_code_t ALU_LUI  = 5'd10;\nparameter alu_code_t ALU_BEQ  = 5'd11;\nparameter alu_code_t ALU_BNE  = 5'd12;\nparameter alu_code_t ALU_BLT  = 5'd13;\nparameter alu_code_t ALU_BGE  = 5'd14;\nparameter alu_code_t ALU_BLTU = 5'd15;\nparameter alu_code_t ALU_BGEU = 5'd16;\nparameter alu_code_t ALU_JAL  = 5'd17;\nparameter alu_code_t ALU_JALR = 5'd18;\n</code></pre></p> \u3053\u305f\u3048 <pre><code>logic [6:0] op_code;\nlogic [2:0] funct3;\n\nassign op_code = insn[6:0];\nassign funct3 = insn[14:12];\n\nalways_comb begin\n    unique case (op_code)\n        OPREG: begin\n            unique case (funct3)\n                3'b000: alu_code = (insn[30] == 1'b1) ? ALU_SUB : ALU_ADD;\n                3'b001: alu_code = ALU_SLL;\n                3'b010: alu_code = ALU_SLT;\n                3'b011: alu_code = ALU_SLTU;\n                3'b100: alu_code = ALU_XOR;\n                3'b101: alu_code = (insn[30] == 1'b1) ? ALU_SRA : ALU_SRL;\n                3'b110: alu_code = ALU_OR;\n                3'b111: alu_code = ALU_AND;\n                default: alu_code = ALU_ADD;\n            endcase\n        end\n        OPIMM: begin\n            unique case (funct3)\n                3'b000: alu_code = ALU_ADD;\n                3'b001: alu_code = ALU_SLL;\n                3'b010: alu_code = ALU_SLT;\n                3'b011: alu_code = ALU_SLTU;\n                3'b100: alu_code = ALU_XOR;\n                3'b101: alu_code = (insn[30] == 1'b1) ? ALU_SRA : ALU_SRL;\n                3'b110: alu_code = ALU_OR;\n                3'b111: alu_code = ALU_AND;\n                default: alu_code = ALU_ADD;\n            endcase\n        end\n        LUI: alu_code = ALU_LUI;\n        AUIPC: alu_code = ALU_ADD;\n        BRANCH: begin\n            unique case (funct3)\n                3'b000: alu_code = ALU_BEQ;\n                3'b001: alu_code = ALU_BNE;\n                3'b100: alu_code = ALU_BLT;\n                3'b101: alu_code = ALU_BGE;\n                3'b110: alu_code = ALU_BLTU;\n                3'b111: alu_code = ALU_BGEU;\n                default: alu_code = ALU_ADD;\n            endcase\n        end\n        JAL: alu_code = ALU_JAL;\n        JALR: alu_code = ALU_JALR;\n        default: alu_code = ALU_ADD;\n    endcase\nend\n</code></pre> <p>\u7d9a\u3044\u3066\u3001<code>alu_op1_sel</code>\u3001<code>alu_op2_sel</code>\u306e\u751f\u6210\u90e8\u306b\u3064\u3044\u3066\u3082\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u3089\u306fALU\u3067\u306e\u6f14\u7b97\u306b<code>rs1</code>\u3001<code>rs2</code>\u3001<code>imm</code>\u3001<code>pc</code>\u3068\u3044\u3063\u305f\u5024\u306e\u3069\u308c\u3092\u4f7f\u3046\u306e\u304b\u6c7a\u3081\u308b\u305f\u3081\u306e\u4fe1\u53f7\u3067\u3057\u305f\u3002</p> <p>\u6f14\u7fd2: \u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306eALU\u5236\u5fa1\u4fe1\u53f7\u7b97\u51fa\u90e8\u5206\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u4fee\u6b63\u3057\u3066\u3001\u547d\u4ee4\u30c7\u30b3\u30fc\u30c0\u306e<code>alu_code[4:0]</code>\u7b97\u51fa\u90e8\u5206\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002 <pre><code>logic [6:0] op_code;\nlogic [2:0] funct3;\n\nassign op_code = insn[6:0];\nassign funct3 = insn[14:12];\n\nalways_comb begin\n    unique case (op_code)\n        OPREG: begin\n            unique case (funct3)\n                3'b000: alu_code = (insn[30] == 1'b1) ? ALU_SUB : ALU_ADD;\n            endcase\n        end\n        OPIMM: begin\n            unique case (funct3)\n                3'b000: alu_code = ALU_ADD;\n            endcase\n        end\n        LUI: alu_code = ALU_LUI;\n        AUIPC: alu_code = ALU_ADD;\n        BRANCH: begin\n            unique case (funct3)\n            endcase\n        end\n        JAL: alu_code = ALU_JAL;\n        JALR: alu_code = ALU_JALR;\n        default: alu_code = ALU_ADD;\n    endcase\nend\n</code></pre> \u306a\u304a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5229\u7528\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002 <pre><code>// op_code\ntypedef logic [6:0] op_code_t;\nparameter op_code_t OPIMM  = 7'b0010011;\nparameter op_code_t OPREG  = 7'b0110011;\nparameter op_code_t LUI    = 7'b0110111;\nparameter op_code_t AUIPC  = 7'b0010111;\nparameter op_code_t LOAD   = 7'b0000011;\nparameter op_code_t STORE  = 7'b0100011;\nparameter op_code_t BRANCH = 7'b1100011;\nparameter op_code_t JAL    = 7'b1101111;\nparameter op_code_t JALR   = 7'b1100111;\n\n// alu_code\ntypedef logic [4:0] alu_code_t;\nparameter alu_code_t ALU_ADD  = 5'd0;\nparameter alu_code_t ALU_SUB  = 5'd1;\nparameter alu_code_t ALU_XOR  = 5'd2;\nparameter alu_code_t ALU_OR   = 5'd3;\nparameter alu_code_t ALU_AND  = 5'd4;\nparameter alu_code_t ALU_SLT  = 5'd5;\nparameter alu_code_t ALU_SLTU = 5'd6;\nparameter alu_code_t ALU_SLL  = 5'd7;\nparameter alu_code_t ALU_SRL  = 5'd8;\nparameter alu_code_t ALU_SRA  = 5'd9;\nparameter alu_code_t ALU_LUI  = 5'd10;\nparameter alu_code_t ALU_BEQ  = 5'd11;\nparameter alu_code_t ALU_BNE  = 5'd12;\nparameter alu_code_t ALU_BLT  = 5'd13;\nparameter alu_code_t ALU_BGE  = 5'd14;\nparameter alu_code_t ALU_BLTU = 5'd15;\nparameter alu_code_t ALU_BGEU = 5'd16;\nparameter alu_code_t ALU_JAL  = 5'd17;\nparameter alu_code_t ALU_JALR = 5'd18;\n\n// alu_op1\ntypedef logic [0:0] alu_op1_t;\nparameter alu_op1_t ALU_OP1_RS1 = 1'b0;\nparameter alu_op1_t ALU_OP1_PC  = 1'b1;\n\n// alu_op2\ntypedef logic [0:0] alu_op2_t;\nparameter alu_op1_t ALU_OP2_RS2 = 1'b0;\nparameter alu_op1_t ALU_OP2_IMM = 1'b1;\n</code></pre></p> \u3053\u305f\u3048 <pre><code>logic [6:0] op_code;\nlogic [2:0] funct3;\n\nassign op_code = insn[6:0];\nassign funct3 = insn[14:12];\n\nalways_comb begin\n    unique case (op_code)\n        OPREG: begin\n            unique case (funct3)\n                3'b000: alu_code = (insn[30] == 1'b1) ? ALU_SUB : ALU_ADD;\n                3'b001: alu_code = ALU_SLL;\n                3'b010: alu_code = ALU_SLT;\n                3'b011: alu_code = ALU_SLTU;\n                3'b100: alu_code = ALU_XOR;\n                3'b101: alu_code = (insn[30] == 1'b1) ? ALU_SRA : ALU_SRL;\n                3'b110: alu_code = ALU_OR;\n                3'b111: alu_code = ALU_AND;\n                default: alu_code = ALU_ADD;\n            endcase\n        end\n        OPIMM: begin\n            unique case (funct3)\n                3'b000: alu_code = ALU_ADD;\n                3'b001: alu_code = ALU_SLL;\n                3'b010: alu_code = ALU_SLT;\n                3'b011: alu_code = ALU_SLTU;\n                3'b100: alu_code = ALU_XOR;\n                3'b101: alu_code = (insn[30] == 1'b1) ? ALU_SRA : ALU_SRL;\n                3'b110: alu_code = ALU_OR;\n                3'b111: alu_code = ALU_AND;\n                default: alu_code = ALU_ADD;\n            endcase\n        end\n        LUI: alu_code = ALU_LUI;\n        AUIPC: alu_code = ALU_ADD;\n        BRANCH: begin\n            unique case (funct3)\n                3'b000: alu_code = ALU_BEQ;\n                3'b001: alu_code = ALU_BNE;\n                3'b100: alu_code = ALU_BLT;\n                3'b101: alu_code = ALU_BGE;\n                3'b110: alu_code = ALU_BLTU;\n                3'b111: alu_code = ALU_BGEU;\n                default: alu_code = ALU_ADD;\n            endcase\n        end\n        JAL: alu_code = ALU_JAL;\n        JALR: alu_code = ALU_JALR;\n        default: alu_code = ALU_ADD;\n    endcase\nend\n</code></pre>"},{"location":"week3/#_2","title":"\u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u8a08","text":"<p>\u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u306f32bit\u5e45\u306e32\u500b\u306e\u30ec\u30b8\u30b9\u30bf\u304b\u3089\u6210\u308a\u3001\u305d\u306e\u3046\u3061\u4e00\u3064\u306f\u30bc\u30ed\u30ec\u30b8\u30b9\u30bf\u3067\u5e38\u306b0\u3092\u4fdd\u6301\u3059\u308b\u306e\u3067\u3057\u305f\u3002\u305d\u306e\u305f\u3081\u3001\u5b9f\u88c5\u4e0a\u306f31\u500b\u306e\u66f8\u304d\u8fbc\u307f\u53ef\u80fd\u306a\u30ec\u30b8\u30b9\u30bf\u3092\u7528\u610f\u3057\u307e\u3059\u3002</p> <p><code>rs1</code>\u3068<code>rs2</code>\u306b\u5fdc\u3058\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30ec\u30b8\u30b9\u30bf\u306f2\u30dd\u30fc\u30c8\u306e\u8aad\u307f\u51fa\u3057\u56de\u8def\u3092\u6301\u3061\u307e\u3059\u3002\u307e\u305f\u3001<code>rd</code>\u306b\u5fdc\u3058\u305f\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u30011\u30dd\u30fc\u30c8\u306e\u66f8\u304d\u8fbc\u307f\u56de\u8def\u3092\u6301\u3061\u307e\u3059\u3002\u3053\u3053\u3067\u66f8\u304d\u8fbc\u307f\u306b\u3064\u3044\u3066\u306f\u30af\u30ed\u30c3\u30af\u540c\u671f\u3067\u304a\u3053\u306a\u3044\u307e\u3059\u3002<code>rs1</code>\u3084<code>rs2</code>\u3067\u30bc\u30ed\u30ec\u30b8\u30b9\u30bf\u304c\u9078\u629e\u3055\u308c\u305f\u969b\u306b\u3064\u3044\u3066\u3082\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002</p> <p>\u6f14\u7fd2: \u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u8a08</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u4fee\u6b63\u3057\u3066\u3001\u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u8a08\u3057\u307e\u3057\u3087\u3046\u3002 <pre><code>module regfile (\n    input logic clk,\n    input logic reg_we,\n    input logic [4:0] rs1,\n    input logic [4:0] rs2,\n    input logic [4:0] rd,\n    input logic [31:0] rd_value,\n    output logic [31:0] rs1_value,\n    output logic [31:0] rs2_value\n);\n</code></pre></p> \u3053\u305f\u3048 <pre><code>module regfile (\n    input logic clk,\n    input logic reg_we,\n    input logic [4:0] rs1,\n    input logic [4:0] rs2,\n    input logic [4:0] rd,\n    input logic [31:0] rd_value,\n    output logic [31:0] rs1_value,\n    output logic [31:0] rs2_value\n);\n\n    logic [31:0] regfile [1:31];\n\n    always_ff @(posedge clk) begin\n        if (reg_we) regfile[rd] &lt;= rd_value;\n    end\n\n    assign rs1_value = (rs1 == 5'd0) ? 32'd0 : regfile[rs1];\n    assign rs2_value = (rs2 == 5'd0) ? 32'd0 : regfile[rs2];\n\nendmodule\n</code></pre>"},{"location":"week3/#_3","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u30ab\u30a6\u30f3\u30bf\u306e\u8a2d\u8a08","text":"program_counter.sv<pre><code>module program_counter (\n    input logic clk,\n    input logic rst_n,\n    input logic [31:0] next_pc,\n    output logic [31:0] pc\n);\n\n    always_ff @(posedge clk) begin\n        if (!rst_n) begin\n            pc &lt;= 32'd0;\n        end else if begin\n            pc &lt;= next_pc;\n        end\n    end\n\nendmodule\n</code></pre>"},{"location":"week3/#design-compiler","title":"Design Compiler\u3092\u7528\u3044\u305f\u8ad6\u7406\u5408\u6210","text":""},{"location":"week3/#_4","title":"\u8ad6\u7406\u5408\u6210\u306e\u57fa\u672c","text":"\u7c21\u6613\u7684\u306b\u8868\u73fe\u3057\u305f\u8ad6\u7406\u5408\u6210\u30d5\u30ed\u30fc (\u518d\u63b2)\u3002 <p>\u3088\u308a\u5177\u4f53\u7684\u306b\u306f\u3001 - .tcl\u30d5\u30a1\u30a4\u30eb \u3068\u3044\u3063\u305f\u3082\u306e\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>$ /usr/bin/klayout /home/resources/gds/NanGate_15nm_OCL.gds\n</code></pre>"},{"location":"week3/#alu_1","title":"ALU\u306e\u8ad6\u7406\u5408\u6210","text":"<p>\u5b9f\u969b\u306b\u3001\u81ea\u5206\u306eRTL\u8a2d\u8a08\u3092\u8ad6\u7406\u5408\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <pre><code>$ cp /home/resources/syn_alu.tcl ${\u81ea\u5206\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea}\n</code></pre> <p>\u3068\u3057\u3066\u3001\u8ad6\u7406\u5408\u6210\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u81ea\u5206\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u3068\u30b3\u30d4\u30fc\u3057\u3066\u304d\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u5148\u307b\u3069\u8a18\u8ff0\u3057\u305f<code>alu.sv</code>\u3084<code>cpu_pkg.sv</code>\u306b\u3064\u3044\u3066\u3082</p> <pre><code>${\u81ea\u5206\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea}/WORK/alu.sv\n${\u81ea\u5206\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea}/WORK/cpu_pkg.sv\n</code></pre> <p>\u3068\u306a\u308b\u3088\u3046\u306b<code>WORK</code>\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u683c\u7d0d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u3055\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u63c3\u3063\u305f\u72b6\u614b\u3067\u3001</p> <pre><code>$ dc_shell-xg-t -f syn_alu.tcl\n</code></pre> <p>\u3068\u3059\u308b\u3068\u3001\u8ad6\u7406\u5408\u6210\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"week3/#_5","title":"\u30ec\u30b8\u30b9\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u8ad6\u7406\u5408\u6210","text":"<p>\u30af\u30ed\u30c3\u30af\u4fe1\u53f7\u306e\u5b58\u5728\u3059\u308b\u9806\u5e8f\u56de\u8def\u306b\u3064\u3044\u3066\u3082\u8ad6\u7406\u5408\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <pre><code>$ cp /home/resources/syn_regfile.tcl ${\u81ea\u5206\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea}\n</code></pre> <p>\u3068\u3057\u3066\u3001\u8ad6\u7406\u5408\u6210\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u81ea\u5206\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u3068\u30b3\u30d4\u30fc\u3057\u3066\u304d\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u5148\u307b\u3069\u8a18\u8ff0\u3057\u305f<code>regfile.sv</code>\u3092</p> <pre><code>${\u81ea\u5206\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea}/WORK/regfile.sv\n</code></pre> <p>\u3068\u306a\u308b\u3088\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u683c\u7d0d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ dc_shell-xg-t -f syn_regfile.tcl\n</code></pre> <p>\u3068\u3059\u308b\u3068\u3001\u8ad6\u7406\u5408\u6210\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p> <p>\u3053\u3053\u304b\u3089\u8272\u3005\u306a\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001<code>alu</code>\u306f\u305d\u308c\u306a\u308a\u306b\u8907\u96d1\u306a\u7d44\u307f\u5408\u308f\u305b\u56de\u8def\u3067\u8a18\u8ff0\u3082\u9762\u5012\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u6700\u9069\u5316\u3055\u308c\u308b\u3068\u9762\u7a4d\u306f\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001<code>regfile</code>\u306f<code>alu</code>\u3068\u6bd4\u8f03\u3057\u3066</p> <p>\u8ad6\u7406\u5408\u6210\u7d50\u679c\u306e\u9762\u7a4d</p> <p>\u8ad6\u7406\u5408\u6210\u3067\u306fRTL\u3092\u30bf\u30a4\u30df\u30f3\u30b0\u5236\u7d04\u3092\u6e80\u305f\u3059\u3088\u3046\u306a\u8ad6\u7406\u30b2\u30fc\u30c8\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u5909\u63db\u3059\u308b\u3060\u3051\u3067\u3001\u3053\u306e\u6642\u70b9\u3067\u5b9f\u969b\u306bVLSI\u4e0a\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u5b9a\u307e\u3063\u305f\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u8ad6\u7406\u5408\u6210\u7d50\u679c\u3068\u3057\u3066\u8868\u793a\u3055\u308c\u308b\u9762\u7a4d\u306f\u3001\u5408\u6210\u3055\u308c\u305f\u56de\u8def\u3092\u69cb\u6210\u3059\u308b\u5404\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u306e\u9762\u7a4d\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u8db3\u3057\u5408\u308f\u305b\u305f\u3082\u306e\u3067\u3059\u3002\u5b9f\u969b\u306b\u306f\u3001\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30bb\u30eb\u9593\u306e\u914d\u7dda\u306e\u305f\u3081\u306b\u3042\u308b\u7a0b\u5ea6\u306e\u9699\u9593\u3092\u7a7a\u3051\u3066\u30bb\u30eb\u3092\u914d\u7f6e\u3057\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u3001\u305f\u3068\u3048\u3070\u3053\u308c\u304c\u5178\u578b\u7684\u306b\u306f60-70%\u7a0b\u5ea6\u306e\u5bc6\u5ea6\u306b\u306a\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u5b9f\u969b\u306eVLSI\u4e0a\u306e\u9762\u7a4d\u306f\u8ad6\u7406\u5408\u6210\u7d50\u679c\u306e1.4-1.7\u500d\u306e\u5024\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>Process design kit (PDK)</p> <p>\u3053\u3046\u3057\u305f\u8a2d\u8a08\u7528\u30c7\u30fc\u30bf\u304c\u96c6\u7a4d\u3055\u308c\u305f\u3082\u306e\u3092PDK\u3068\u547c\u3073\u307e\u3059\u3002\u4eca\u56de\u8ad6\u7406\u5408\u6210\u7528\u306b\u5229\u7528\u3057\u305f15nm FinFET\u30d7\u30ed\u30bb\u30b9\u306e\u3088\u3046\u306b\u3001\u30aa\u30fc\u30d7\u30f3\u306aPDK\u304c\u4ed6\u306b\u3082\u5b58\u5728\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u30017nm FinFET\u30d7\u30ed\u30bb\u30b9, ASAP7\u3068\u3044\u3063\u305f\u3082\u306e\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u307e\u305f\u3001130nm CMOS\u30d7\u30ed\u30bb\u30b9, SKY130\u306f\u3001\u30aa\u30fc\u30d7\u30f3\u304b\u3064\u3001\u5b9f\u969b\u306b\u88fd\u9020\u53ef\u80fd\u306a\u30d7\u30ed\u30bb\u30b9\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3044\u3063\u305fPDK\u3092\u5229\u7528\u3057\u3066\u8ad6\u7406\u5408\u6210\u3084\u914d\u7f6e\u914d\u7dda\u3092\u5b9f\u65bd\u3057\u3001RTL\u8a2d\u8a08\u3092VLSI\u5316\u3057\u305f\u969b\u306e\u96fb\u529b\u3001\u52d5\u4f5c\u901f\u5ea6\u3001\u9762\u7a4d\u3068\u3044\u3063\u305f\u5024\u3092\u898b\u7a4d\u3082\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"week4/","title":"\u7b2c4\u56de \u30d7\u30ed\u30bb\u30c3\u30b5\u306eVLSI\u5b9f\u88c5","text":"<p>\u672c\u65e5\u306e\u8b1b\u7fa9\u5185\u5bb9</p> <ul> <li>\u516c\u958b\u3092\u304a\u5f85\u3061\u304f\u3060\u3055\u3044</li> </ul>"},{"location":"week5/","title":"\u7b2c5\u56de \u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u9ad8\u6027\u80fd\u5316","text":"<p>\u672c\u65e5\u306e\u8b1b\u7fa9\u5185\u5bb9</p> <ul> <li>\u516c\u958b\u3092\u304a\u5f85\u3061\u304f\u3060\u3055\u3044</li> </ul>"},{"location":"week6/","title":"\u7b2c6\u56de \u30e1\u30e2\u30ea\u3068\u5468\u8fba\u56de\u8def","text":"<p>\u672c\u65e5\u306e\u8b1b\u7fa9\u5185\u5bb9</p> <ul> <li>\u516c\u958b\u3092\u304a\u5f85\u3061\u304f\u3060\u3055\u3044</li> </ul>"},{"location":"weekreport/","title":"\u30ec\u30dd\u30fc\u30c8\u8ab2\u984c","text":"<p>\u8ab2\u984c\u5185\u5bb9</p> <ul> <li>\u516c\u958b\u3092\u304a\u5f85\u3061\u304f\u3060\u3055\u3044</li> </ul>"}]}